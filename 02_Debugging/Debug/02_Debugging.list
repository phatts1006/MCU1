
02_Debugging.elf:     file format elf32-littlearm

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .isr_vector   00000198  08000000  08000000  00010000  2**0
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  1 .text         000016f8  080001a0  080001a0  000101a0  2**4
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .rodata       000001a4  08001898  08001898  00011898  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  3 .ARM.extab    00000000  08001a3c  08001a3c  000200ac  2**0
                  CONTENTS
  4 .ARM          00000000  08001a3c  08001a3c  000200ac  2**0
                  CONTENTS
  5 .preinit_array 00000000  08001a3c  08001a3c  000200ac  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  6 .init_array   00000004  08001a3c  08001a3c  00011a3c  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  7 .fini_array   00000004  08001a40  08001a40  00011a40  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  8 .data         000000ac  20000000  08001a44  00020000  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  9 .bss          00000030  200000ac  08001af0  000200ac  2**2
                  ALLOC
 10 ._user_heap_stack 00000604  200000dc  08001af0  000200dc  2**0
                  ALLOC
 11 .ARM.attributes 00000030  00000000  00000000  000200ac  2**0
                  CONTENTS, READONLY
 12 .debug_info   00000b3a  00000000  00000000  000200dc  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 13 .debug_abbrev 000003ef  00000000  00000000  00020c16  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 14 .debug_aranges 00000140  00000000  00000000  00021008  2**3
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 15 .debug_ranges 00000108  00000000  00000000  00021148  2**3
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 16 .debug_macro  00002c7a  00000000  00000000  00021250  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 17 .debug_line   000014b6  00000000  00000000  00023eca  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 18 .debug_str    000093b7  00000000  00000000  00025380  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 19 .comment      00000050  00000000  00000000  0002e737  2**0
                  CONTENTS, READONLY
 20 .debug_frame  00000eec  00000000  00000000  0002e788  2**2
                  CONTENTS, READONLY, DEBUGGING, OCTETS

Disassembly of section .text:

080001a0 <__do_global_dtors_aux>:
 80001a0:	b510      	push	{r4, lr}
 80001a2:	4c05      	ldr	r4, [pc, #20]	; (80001b8 <__do_global_dtors_aux+0x18>)
 80001a4:	7823      	ldrb	r3, [r4, #0]
 80001a6:	b933      	cbnz	r3, 80001b6 <__do_global_dtors_aux+0x16>
 80001a8:	4b04      	ldr	r3, [pc, #16]	; (80001bc <__do_global_dtors_aux+0x1c>)
 80001aa:	b113      	cbz	r3, 80001b2 <__do_global_dtors_aux+0x12>
 80001ac:	4804      	ldr	r0, [pc, #16]	; (80001c0 <__do_global_dtors_aux+0x20>)
 80001ae:	f3af 8000 	nop.w
 80001b2:	2301      	movs	r3, #1
 80001b4:	7023      	strb	r3, [r4, #0]
 80001b6:	bd10      	pop	{r4, pc}
 80001b8:	200000ac 	.word	0x200000ac
 80001bc:	00000000 	.word	0x00000000
 80001c0:	08001880 	.word	0x08001880

080001c4 <frame_dummy>:
 80001c4:	b508      	push	{r3, lr}
 80001c6:	4b03      	ldr	r3, [pc, #12]	; (80001d4 <frame_dummy+0x10>)
 80001c8:	b11b      	cbz	r3, 80001d2 <frame_dummy+0xe>
 80001ca:	4903      	ldr	r1, [pc, #12]	; (80001d8 <frame_dummy+0x14>)
 80001cc:	4803      	ldr	r0, [pc, #12]	; (80001dc <frame_dummy+0x18>)
 80001ce:	f3af 8000 	nop.w
 80001d2:	bd08      	pop	{r3, pc}
 80001d4:	00000000 	.word	0x00000000
 80001d8:	200000b0 	.word	0x200000b0
 80001dc:	08001880 	.word	0x08001880

080001e0 <memchr>:
 80001e0:	f001 01ff 	and.w	r1, r1, #255	; 0xff
 80001e4:	2a10      	cmp	r2, #16
 80001e6:	db2b      	blt.n	8000240 <memchr+0x60>
 80001e8:	f010 0f07 	tst.w	r0, #7
 80001ec:	d008      	beq.n	8000200 <memchr+0x20>
 80001ee:	f810 3b01 	ldrb.w	r3, [r0], #1
 80001f2:	3a01      	subs	r2, #1
 80001f4:	428b      	cmp	r3, r1
 80001f6:	d02d      	beq.n	8000254 <memchr+0x74>
 80001f8:	f010 0f07 	tst.w	r0, #7
 80001fc:	b342      	cbz	r2, 8000250 <memchr+0x70>
 80001fe:	d1f6      	bne.n	80001ee <memchr+0xe>
 8000200:	b4f0      	push	{r4, r5, r6, r7}
 8000202:	ea41 2101 	orr.w	r1, r1, r1, lsl #8
 8000206:	ea41 4101 	orr.w	r1, r1, r1, lsl #16
 800020a:	f022 0407 	bic.w	r4, r2, #7
 800020e:	f07f 0700 	mvns.w	r7, #0
 8000212:	2300      	movs	r3, #0
 8000214:	e8f0 5602 	ldrd	r5, r6, [r0], #8
 8000218:	3c08      	subs	r4, #8
 800021a:	ea85 0501 	eor.w	r5, r5, r1
 800021e:	ea86 0601 	eor.w	r6, r6, r1
 8000222:	fa85 f547 	uadd8	r5, r5, r7
 8000226:	faa3 f587 	sel	r5, r3, r7
 800022a:	fa86 f647 	uadd8	r6, r6, r7
 800022e:	faa5 f687 	sel	r6, r5, r7
 8000232:	b98e      	cbnz	r6, 8000258 <memchr+0x78>
 8000234:	d1ee      	bne.n	8000214 <memchr+0x34>
 8000236:	bcf0      	pop	{r4, r5, r6, r7}
 8000238:	f001 01ff 	and.w	r1, r1, #255	; 0xff
 800023c:	f002 0207 	and.w	r2, r2, #7
 8000240:	b132      	cbz	r2, 8000250 <memchr+0x70>
 8000242:	f810 3b01 	ldrb.w	r3, [r0], #1
 8000246:	3a01      	subs	r2, #1
 8000248:	ea83 0301 	eor.w	r3, r3, r1
 800024c:	b113      	cbz	r3, 8000254 <memchr+0x74>
 800024e:	d1f8      	bne.n	8000242 <memchr+0x62>
 8000250:	2000      	movs	r0, #0
 8000252:	4770      	bx	lr
 8000254:	3801      	subs	r0, #1
 8000256:	4770      	bx	lr
 8000258:	2d00      	cmp	r5, #0
 800025a:	bf06      	itte	eq
 800025c:	4635      	moveq	r5, r6
 800025e:	3803      	subeq	r0, #3
 8000260:	3807      	subne	r0, #7
 8000262:	f015 0f01 	tst.w	r5, #1
 8000266:	d107      	bne.n	8000278 <memchr+0x98>
 8000268:	3001      	adds	r0, #1
 800026a:	f415 7f80 	tst.w	r5, #256	; 0x100
 800026e:	bf02      	ittt	eq
 8000270:	3001      	addeq	r0, #1
 8000272:	f415 3fc0 	tsteq.w	r5, #98304	; 0x18000
 8000276:	3001      	addeq	r0, #1
 8000278:	bcf0      	pop	{r4, r5, r6, r7}
 800027a:	3801      	subs	r0, #1
 800027c:	4770      	bx	lr
 800027e:	bf00      	nop

08000280 <array_fill_numbers>:
int numbers[] = { 456,345,678,567,890,456,3456,123,765,456,896,456,678,987,000,145,90};

int  someData = 90;

void array_fill_numbers(int pNumbers[], unsigned int len)
{
 8000280:	b580      	push	{r7, lr}
 8000282:	b084      	sub	sp, #16
 8000284:	af00      	add	r7, sp, #0
 8000286:	6078      	str	r0, [r7, #4]
 8000288:	6039      	str	r1, [r7, #0]

    for ( unsigned int i = 0 ; i < len ; i++)
 800028a:	2300      	movs	r3, #0
 800028c:	60fb      	str	r3, [r7, #12]
 800028e:	e015      	b.n	80002bc <array_fill_numbers+0x3c>
    {
        pNumbers[i] = rand() % 1000;
 8000290:	f000 fa76 	bl	8000780 <rand>
 8000294:	4602      	mov	r2, r0
 8000296:	68fb      	ldr	r3, [r7, #12]
 8000298:	009b      	lsls	r3, r3, #2
 800029a:	6879      	ldr	r1, [r7, #4]
 800029c:	4419      	add	r1, r3
 800029e:	4b0c      	ldr	r3, [pc, #48]	; (80002d0 <array_fill_numbers+0x50>)
 80002a0:	fb83 0302 	smull	r0, r3, r3, r2
 80002a4:	1198      	asrs	r0, r3, #6
 80002a6:	17d3      	asrs	r3, r2, #31
 80002a8:	1ac3      	subs	r3, r0, r3
 80002aa:	f44f 707a 	mov.w	r0, #1000	; 0x3e8
 80002ae:	fb00 f303 	mul.w	r3, r0, r3
 80002b2:	1ad3      	subs	r3, r2, r3
 80002b4:	600b      	str	r3, [r1, #0]
    for ( unsigned int i = 0 ; i < len ; i++)
 80002b6:	68fb      	ldr	r3, [r7, #12]
 80002b8:	3301      	adds	r3, #1
 80002ba:	60fb      	str	r3, [r7, #12]
 80002bc:	68fa      	ldr	r2, [r7, #12]
 80002be:	683b      	ldr	r3, [r7, #0]
 80002c0:	429a      	cmp	r2, r3
 80002c2:	d3e5      	bcc.n	8000290 <array_fill_numbers+0x10>
    }

}
 80002c4:	bf00      	nop
 80002c6:	bf00      	nop
 80002c8:	3710      	adds	r7, #16
 80002ca:	46bd      	mov	sp, r7
 80002cc:	bd80      	pop	{r7, pc}
 80002ce:	bf00      	nop
 80002d0:	10624dd3 	.word	0x10624dd3

080002d4 <display_numbers>:

void display_numbers(int *pNumbers, unsigned int len, char *pMessage)
{
 80002d4:	b580      	push	{r7, lr}
 80002d6:	b086      	sub	sp, #24
 80002d8:	af00      	add	r7, sp, #0
 80002da:	60f8      	str	r0, [r7, #12]
 80002dc:	60b9      	str	r1, [r7, #8]
 80002de:	607a      	str	r2, [r7, #4]
    printf("%s",pMessage);
 80002e0:	6879      	ldr	r1, [r7, #4]
 80002e2:	480e      	ldr	r0, [pc, #56]	; (800031c <display_numbers+0x48>)
 80002e4:	f000 fa1e 	bl	8000724 <iprintf>

    for (unsigned i = 0 ; i < len ; i++)
 80002e8:	2300      	movs	r3, #0
 80002ea:	617b      	str	r3, [r7, #20]
 80002ec:	e00b      	b.n	8000306 <display_numbers+0x32>
    {
        printf("%5d  ",pNumbers[i]);
 80002ee:	697b      	ldr	r3, [r7, #20]
 80002f0:	009b      	lsls	r3, r3, #2
 80002f2:	68fa      	ldr	r2, [r7, #12]
 80002f4:	4413      	add	r3, r2
 80002f6:	681b      	ldr	r3, [r3, #0]
 80002f8:	4619      	mov	r1, r3
 80002fa:	4809      	ldr	r0, [pc, #36]	; (8000320 <display_numbers+0x4c>)
 80002fc:	f000 fa12 	bl	8000724 <iprintf>
    for (unsigned i = 0 ; i < len ; i++)
 8000300:	697b      	ldr	r3, [r7, #20]
 8000302:	3301      	adds	r3, #1
 8000304:	617b      	str	r3, [r7, #20]
 8000306:	697a      	ldr	r2, [r7, #20]
 8000308:	68bb      	ldr	r3, [r7, #8]
 800030a:	429a      	cmp	r2, r3
 800030c:	d3ef      	bcc.n	80002ee <display_numbers+0x1a>
    }

    printf("\n");
 800030e:	200a      	movs	r0, #10
 8000310:	f000 fa20 	bl	8000754 <putchar>
}
 8000314:	bf00      	nop
 8000316:	3718      	adds	r7, #24
 8000318:	46bd      	mov	sp, r7
 800031a:	bd80      	pop	{r7, pc}
 800031c:	08001898 	.word	0x08001898
 8000320:	0800189c 	.word	0x0800189c

08000324 <swap_numbers>:


void swap_numbers(int *x,int *y)
{
 8000324:	b480      	push	{r7}
 8000326:	b085      	sub	sp, #20
 8000328:	af00      	add	r7, sp, #0
 800032a:	6078      	str	r0, [r7, #4]
 800032c:	6039      	str	r1, [r7, #0]
     int temp=*x;
 800032e:	687b      	ldr	r3, [r7, #4]
 8000330:	681b      	ldr	r3, [r3, #0]
 8000332:	60fb      	str	r3, [r7, #12]
     *x=*y;
 8000334:	683b      	ldr	r3, [r7, #0]
 8000336:	681a      	ldr	r2, [r3, #0]
 8000338:	687b      	ldr	r3, [r7, #4]
 800033a:	601a      	str	r2, [r3, #0]
     *y=temp;
 800033c:	683b      	ldr	r3, [r7, #0]
 800033e:	68fa      	ldr	r2, [r7, #12]
 8000340:	601a      	str	r2, [r3, #0]
     void (*jump_addr) (void);
     jump_addr = (void*)0x20000009;
     jump_addr();
#endif

     someData = 10;
 8000342:	4b04      	ldr	r3, [pc, #16]	; (8000354 <swap_numbers+0x30>)
 8000344:	220a      	movs	r2, #10
 8000346:	601a      	str	r2, [r3, #0]
}
 8000348:	bf00      	nop
 800034a:	3714      	adds	r7, #20
 800034c:	46bd      	mov	sp, r7
 800034e:	f85d 7b04 	ldr.w	r7, [sp], #4
 8000352:	4770      	bx	lr
 8000354:	20000044 	.word	0x20000044

08000358 <bubble_sort>:


void bubble_sort(int *pNumbers , unsigned int len)
{
 8000358:	b580      	push	{r7, lr}
 800035a:	b086      	sub	sp, #24
 800035c:	af00      	add	r7, sp, #0
 800035e:	6078      	str	r0, [r7, #4]
 8000360:	6039      	str	r1, [r7, #0]

    int i,j,flag=0;
 8000362:	2300      	movs	r3, #0
 8000364:	60fb      	str	r3, [r7, #12]

    for(i=0;i<len-1;i++)
 8000366:	2300      	movs	r3, #0
 8000368:	617b      	str	r3, [r7, #20]
 800036a:	e02f      	b.n	80003cc <bubble_sort+0x74>
    {
        flag=0;
 800036c:	2300      	movs	r3, #0
 800036e:	60fb      	str	r3, [r7, #12]

        for(j=0;j<len-1-i;j++)
 8000370:	2300      	movs	r3, #0
 8000372:	613b      	str	r3, [r7, #16]
 8000374:	e01d      	b.n	80003b2 <bubble_sort+0x5a>
        {
            if(pNumbers[j] > pNumbers[j+1])
 8000376:	693b      	ldr	r3, [r7, #16]
 8000378:	009b      	lsls	r3, r3, #2
 800037a:	687a      	ldr	r2, [r7, #4]
 800037c:	4413      	add	r3, r2
 800037e:	681a      	ldr	r2, [r3, #0]
 8000380:	693b      	ldr	r3, [r7, #16]
 8000382:	3301      	adds	r3, #1
 8000384:	009b      	lsls	r3, r3, #2
 8000386:	6879      	ldr	r1, [r7, #4]
 8000388:	440b      	add	r3, r1
 800038a:	681b      	ldr	r3, [r3, #0]
 800038c:	429a      	cmp	r2, r3
 800038e:	dd0d      	ble.n	80003ac <bubble_sort+0x54>
            {
                swap_numbers(&pNumbers[j],&pNumbers[j+1]);
 8000390:	693b      	ldr	r3, [r7, #16]
 8000392:	009b      	lsls	r3, r3, #2
 8000394:	687a      	ldr	r2, [r7, #4]
 8000396:	18d0      	adds	r0, r2, r3
 8000398:	693b      	ldr	r3, [r7, #16]
 800039a:	3301      	adds	r3, #1
 800039c:	009b      	lsls	r3, r3, #2
 800039e:	687a      	ldr	r2, [r7, #4]
 80003a0:	4413      	add	r3, r2
 80003a2:	4619      	mov	r1, r3
 80003a4:	f7ff ffbe 	bl	8000324 <swap_numbers>
                flag=1;
 80003a8:	2301      	movs	r3, #1
 80003aa:	60fb      	str	r3, [r7, #12]
        for(j=0;j<len-1-i;j++)
 80003ac:	693b      	ldr	r3, [r7, #16]
 80003ae:	3301      	adds	r3, #1
 80003b0:	613b      	str	r3, [r7, #16]
 80003b2:	697b      	ldr	r3, [r7, #20]
 80003b4:	683a      	ldr	r2, [r7, #0]
 80003b6:	1ad3      	subs	r3, r2, r3
 80003b8:	1e5a      	subs	r2, r3, #1
 80003ba:	693b      	ldr	r3, [r7, #16]
 80003bc:	429a      	cmp	r2, r3
 80003be:	d8da      	bhi.n	8000376 <bubble_sort+0x1e>
            }
        }

        if(flag==0)
 80003c0:	68fb      	ldr	r3, [r7, #12]
 80003c2:	2b00      	cmp	r3, #0
 80003c4:	d008      	beq.n	80003d8 <bubble_sort+0x80>
    for(i=0;i<len-1;i++)
 80003c6:	697b      	ldr	r3, [r7, #20]
 80003c8:	3301      	adds	r3, #1
 80003ca:	617b      	str	r3, [r7, #20]
 80003cc:	683b      	ldr	r3, [r7, #0]
 80003ce:	1e5a      	subs	r2, r3, #1
 80003d0:	697b      	ldr	r3, [r7, #20]
 80003d2:	429a      	cmp	r2, r3
 80003d4:	d8ca      	bhi.n	800036c <bubble_sort+0x14>
            break;
    }
}
 80003d6:	e000      	b.n	80003da <bubble_sort+0x82>
            break;
 80003d8:	bf00      	nop
}
 80003da:	bf00      	nop
 80003dc:	3718      	adds	r7, #24
 80003de:	46bd      	mov	sp, r7
 80003e0:	bd80      	pop	{r7, pc}

080003e2 <insertion_sort>:

void insertion_sort(int *pNumbers , unsigned int len)
{
 80003e2:	b480      	push	{r7}
 80003e4:	b087      	sub	sp, #28
 80003e6:	af00      	add	r7, sp, #0
 80003e8:	6078      	str	r0, [r7, #4]
 80003ea:	6039      	str	r1, [r7, #0]

     int i,j,num;

     for(i=1 ; i<len ; i++)
 80003ec:	2301      	movs	r3, #1
 80003ee:	617b      	str	r3, [r7, #20]
 80003f0:	e02c      	b.n	800044c <insertion_sort+0x6a>
     {
         j=i-1;
 80003f2:	697b      	ldr	r3, [r7, #20]
 80003f4:	3b01      	subs	r3, #1
 80003f6:	613b      	str	r3, [r7, #16]

         num = pNumbers[i];
 80003f8:	697b      	ldr	r3, [r7, #20]
 80003fa:	009b      	lsls	r3, r3, #2
 80003fc:	687a      	ldr	r2, [r7, #4]
 80003fe:	4413      	add	r3, r2
 8000400:	681b      	ldr	r3, [r3, #0]
 8000402:	60fb      	str	r3, [r7, #12]

         while( (j>-1) && (pNumbers[j] > num) )
 8000404:	e00d      	b.n	8000422 <insertion_sort+0x40>
         {
             pNumbers[j+1] = pNumbers[j];
 8000406:	693b      	ldr	r3, [r7, #16]
 8000408:	009b      	lsls	r3, r3, #2
 800040a:	687a      	ldr	r2, [r7, #4]
 800040c:	441a      	add	r2, r3
 800040e:	693b      	ldr	r3, [r7, #16]
 8000410:	3301      	adds	r3, #1
 8000412:	009b      	lsls	r3, r3, #2
 8000414:	6879      	ldr	r1, [r7, #4]
 8000416:	440b      	add	r3, r1
 8000418:	6812      	ldr	r2, [r2, #0]
 800041a:	601a      	str	r2, [r3, #0]
             j--;
 800041c:	693b      	ldr	r3, [r7, #16]
 800041e:	3b01      	subs	r3, #1
 8000420:	613b      	str	r3, [r7, #16]
         while( (j>-1) && (pNumbers[j] > num) )
 8000422:	693b      	ldr	r3, [r7, #16]
 8000424:	2b00      	cmp	r3, #0
 8000426:	db07      	blt.n	8000438 <insertion_sort+0x56>
 8000428:	693b      	ldr	r3, [r7, #16]
 800042a:	009b      	lsls	r3, r3, #2
 800042c:	687a      	ldr	r2, [r7, #4]
 800042e:	4413      	add	r3, r2
 8000430:	681b      	ldr	r3, [r3, #0]
 8000432:	68fa      	ldr	r2, [r7, #12]
 8000434:	429a      	cmp	r2, r3
 8000436:	dbe6      	blt.n	8000406 <insertion_sort+0x24>
         }

         pNumbers[j+1]=num;
 8000438:	693b      	ldr	r3, [r7, #16]
 800043a:	3301      	adds	r3, #1
 800043c:	009b      	lsls	r3, r3, #2
 800043e:	687a      	ldr	r2, [r7, #4]
 8000440:	4413      	add	r3, r2
 8000442:	68fa      	ldr	r2, [r7, #12]
 8000444:	601a      	str	r2, [r3, #0]
     for(i=1 ; i<len ; i++)
 8000446:	697b      	ldr	r3, [r7, #20]
 8000448:	3301      	adds	r3, #1
 800044a:	617b      	str	r3, [r7, #20]
 800044c:	697b      	ldr	r3, [r7, #20]
 800044e:	683a      	ldr	r2, [r7, #0]
 8000450:	429a      	cmp	r2, r3
 8000452:	d8ce      	bhi.n	80003f2 <insertion_sort+0x10>
     }


}
 8000454:	bf00      	nop
 8000456:	bf00      	nop
 8000458:	371c      	adds	r7, #28
 800045a:	46bd      	mov	sp, r7
 800045c:	f85d 7b04 	ldr.w	r7, [sp], #4
 8000460:	4770      	bx	lr
	...

08000464 <main>:



int main()
{
 8000464:	b580      	push	{r7, lr}
 8000466:	b082      	sub	sp, #8
 8000468:	af00      	add	r7, sp, #0

    unsigned int len = sizeof(numbers)/sizeof(int);
 800046a:	2311      	movs	r3, #17
 800046c:	607b      	str	r3, [r7, #4]

    array_fill_numbers(numbers,len);
 800046e:	6879      	ldr	r1, [r7, #4]
 8000470:	4813      	ldr	r0, [pc, #76]	; (80004c0 <main+0x5c>)
 8000472:	f7ff ff05 	bl	8000280 <array_fill_numbers>

    display_numbers(numbers,len,"B-unsorted array :");
 8000476:	4a13      	ldr	r2, [pc, #76]	; (80004c4 <main+0x60>)
 8000478:	6879      	ldr	r1, [r7, #4]
 800047a:	4811      	ldr	r0, [pc, #68]	; (80004c0 <main+0x5c>)
 800047c:	f7ff ff2a 	bl	80002d4 <display_numbers>

    bubble_sort(numbers,len);
 8000480:	6879      	ldr	r1, [r7, #4]
 8000482:	480f      	ldr	r0, [pc, #60]	; (80004c0 <main+0x5c>)
 8000484:	f7ff ff68 	bl	8000358 <bubble_sort>

    display_numbers(numbers,len,"B-sorted array   :");
 8000488:	4a0f      	ldr	r2, [pc, #60]	; (80004c8 <main+0x64>)
 800048a:	6879      	ldr	r1, [r7, #4]
 800048c:	480c      	ldr	r0, [pc, #48]	; (80004c0 <main+0x5c>)
 800048e:	f7ff ff21 	bl	80002d4 <display_numbers>

    array_fill_numbers(numbers,len);
 8000492:	6879      	ldr	r1, [r7, #4]
 8000494:	480a      	ldr	r0, [pc, #40]	; (80004c0 <main+0x5c>)
 8000496:	f7ff fef3 	bl	8000280 <array_fill_numbers>

    display_numbers(numbers,len,"I-unsorted array :");
 800049a:	4a0c      	ldr	r2, [pc, #48]	; (80004cc <main+0x68>)
 800049c:	6879      	ldr	r1, [r7, #4]
 800049e:	4808      	ldr	r0, [pc, #32]	; (80004c0 <main+0x5c>)
 80004a0:	f7ff ff18 	bl	80002d4 <display_numbers>

    insertion_sort(numbers,len);
 80004a4:	6879      	ldr	r1, [r7, #4]
 80004a6:	4806      	ldr	r0, [pc, #24]	; (80004c0 <main+0x5c>)
 80004a8:	f7ff ff9b 	bl	80003e2 <insertion_sort>

    display_numbers(numbers,len,"I-sorted array   :");
 80004ac:	4a08      	ldr	r2, [pc, #32]	; (80004d0 <main+0x6c>)
 80004ae:	6879      	ldr	r1, [r7, #4]
 80004b0:	4803      	ldr	r0, [pc, #12]	; (80004c0 <main+0x5c>)
 80004b2:	f7ff ff0f 	bl	80002d4 <display_numbers>



    return 0;
 80004b6:	2300      	movs	r3, #0
}
 80004b8:	4618      	mov	r0, r3
 80004ba:	3708      	adds	r7, #8
 80004bc:	46bd      	mov	sp, r7
 80004be:	bd80      	pop	{r7, pc}
 80004c0:	20000000 	.word	0x20000000
 80004c4:	080018a4 	.word	0x080018a4
 80004c8:	080018b8 	.word	0x080018b8
 80004cc:	080018cc 	.word	0x080018cc
 80004d0:	080018e0 	.word	0x080018e0

080004d4 <SPI4_IRQHandler>:

void SPI4_IRQHandler(void){
 80004d4:	b480      	push	{r7}
 80004d6:	af00      	add	r7, sp, #0

}
 80004d8:	bf00      	nop
 80004da:	46bd      	mov	sp, r7
 80004dc:	f85d 7b04 	ldr.w	r7, [sp], #4
 80004e0:	4770      	bx	lr

080004e2 <_getpid>:
void initialise_monitor_handles()
{
}

int _getpid(void)
{
 80004e2:	b480      	push	{r7}
 80004e4:	af00      	add	r7, sp, #0
	return 1;
 80004e6:	2301      	movs	r3, #1
}
 80004e8:	4618      	mov	r0, r3
 80004ea:	46bd      	mov	sp, r7
 80004ec:	f85d 7b04 	ldr.w	r7, [sp], #4
 80004f0:	4770      	bx	lr

080004f2 <_kill>:

int _kill(int pid, int sig)
{
 80004f2:	b580      	push	{r7, lr}
 80004f4:	b082      	sub	sp, #8
 80004f6:	af00      	add	r7, sp, #0
 80004f8:	6078      	str	r0, [r7, #4]
 80004fa:	6039      	str	r1, [r7, #0]
	errno = EINVAL;
 80004fc:	f000 f8e0 	bl	80006c0 <__errno>
 8000500:	4603      	mov	r3, r0
 8000502:	2216      	movs	r2, #22
 8000504:	601a      	str	r2, [r3, #0]
	return -1;
 8000506:	f04f 33ff 	mov.w	r3, #4294967295
}
 800050a:	4618      	mov	r0, r3
 800050c:	3708      	adds	r7, #8
 800050e:	46bd      	mov	sp, r7
 8000510:	bd80      	pop	{r7, pc}

08000512 <_exit>:

void _exit (int status)
{
 8000512:	b580      	push	{r7, lr}
 8000514:	b082      	sub	sp, #8
 8000516:	af00      	add	r7, sp, #0
 8000518:	6078      	str	r0, [r7, #4]
	_kill(status, -1);
 800051a:	f04f 31ff 	mov.w	r1, #4294967295
 800051e:	6878      	ldr	r0, [r7, #4]
 8000520:	f7ff ffe7 	bl	80004f2 <_kill>
	while (1) {}		/* Make sure we hang here */
 8000524:	e7fe      	b.n	8000524 <_exit+0x12>

08000526 <_read>:
}

__attribute__((weak)) int _read(int file, char *ptr, int len)
{
 8000526:	b580      	push	{r7, lr}
 8000528:	b086      	sub	sp, #24
 800052a:	af00      	add	r7, sp, #0
 800052c:	60f8      	str	r0, [r7, #12]
 800052e:	60b9      	str	r1, [r7, #8]
 8000530:	607a      	str	r2, [r7, #4]
	int DataIdx;

	for (DataIdx = 0; DataIdx < len; DataIdx++)
 8000532:	2300      	movs	r3, #0
 8000534:	617b      	str	r3, [r7, #20]
 8000536:	e00a      	b.n	800054e <_read+0x28>
	{
		*ptr++ = __io_getchar();
 8000538:	f3af 8000 	nop.w
 800053c:	4601      	mov	r1, r0
 800053e:	68bb      	ldr	r3, [r7, #8]
 8000540:	1c5a      	adds	r2, r3, #1
 8000542:	60ba      	str	r2, [r7, #8]
 8000544:	b2ca      	uxtb	r2, r1
 8000546:	701a      	strb	r2, [r3, #0]
	for (DataIdx = 0; DataIdx < len; DataIdx++)
 8000548:	697b      	ldr	r3, [r7, #20]
 800054a:	3301      	adds	r3, #1
 800054c:	617b      	str	r3, [r7, #20]
 800054e:	697a      	ldr	r2, [r7, #20]
 8000550:	687b      	ldr	r3, [r7, #4]
 8000552:	429a      	cmp	r2, r3
 8000554:	dbf0      	blt.n	8000538 <_read+0x12>
	}

return len;
 8000556:	687b      	ldr	r3, [r7, #4]
}
 8000558:	4618      	mov	r0, r3
 800055a:	3718      	adds	r7, #24
 800055c:	46bd      	mov	sp, r7
 800055e:	bd80      	pop	{r7, pc}

08000560 <_write>:

__attribute__((weak)) int _write(int file, char *ptr, int len)
{
 8000560:	b580      	push	{r7, lr}
 8000562:	b086      	sub	sp, #24
 8000564:	af00      	add	r7, sp, #0
 8000566:	60f8      	str	r0, [r7, #12]
 8000568:	60b9      	str	r1, [r7, #8]
 800056a:	607a      	str	r2, [r7, #4]
	int DataIdx;

	for (DataIdx = 0; DataIdx < len; DataIdx++)
 800056c:	2300      	movs	r3, #0
 800056e:	617b      	str	r3, [r7, #20]
 8000570:	e009      	b.n	8000586 <_write+0x26>
	{
		__io_putchar(*ptr++);
 8000572:	68bb      	ldr	r3, [r7, #8]
 8000574:	1c5a      	adds	r2, r3, #1
 8000576:	60ba      	str	r2, [r7, #8]
 8000578:	781b      	ldrb	r3, [r3, #0]
 800057a:	4618      	mov	r0, r3
 800057c:	f3af 8000 	nop.w
	for (DataIdx = 0; DataIdx < len; DataIdx++)
 8000580:	697b      	ldr	r3, [r7, #20]
 8000582:	3301      	adds	r3, #1
 8000584:	617b      	str	r3, [r7, #20]
 8000586:	697a      	ldr	r2, [r7, #20]
 8000588:	687b      	ldr	r3, [r7, #4]
 800058a:	429a      	cmp	r2, r3
 800058c:	dbf1      	blt.n	8000572 <_write+0x12>
	}
	return len;
 800058e:	687b      	ldr	r3, [r7, #4]
}
 8000590:	4618      	mov	r0, r3
 8000592:	3718      	adds	r7, #24
 8000594:	46bd      	mov	sp, r7
 8000596:	bd80      	pop	{r7, pc}

08000598 <_close>:

int _close(int file)
{
 8000598:	b480      	push	{r7}
 800059a:	b083      	sub	sp, #12
 800059c:	af00      	add	r7, sp, #0
 800059e:	6078      	str	r0, [r7, #4]
	return -1;
 80005a0:	f04f 33ff 	mov.w	r3, #4294967295
}
 80005a4:	4618      	mov	r0, r3
 80005a6:	370c      	adds	r7, #12
 80005a8:	46bd      	mov	sp, r7
 80005aa:	f85d 7b04 	ldr.w	r7, [sp], #4
 80005ae:	4770      	bx	lr

080005b0 <_fstat>:


int _fstat(int file, struct stat *st)
{
 80005b0:	b480      	push	{r7}
 80005b2:	b083      	sub	sp, #12
 80005b4:	af00      	add	r7, sp, #0
 80005b6:	6078      	str	r0, [r7, #4]
 80005b8:	6039      	str	r1, [r7, #0]
	st->st_mode = S_IFCHR;
 80005ba:	683b      	ldr	r3, [r7, #0]
 80005bc:	f44f 5200 	mov.w	r2, #8192	; 0x2000
 80005c0:	605a      	str	r2, [r3, #4]
	return 0;
 80005c2:	2300      	movs	r3, #0
}
 80005c4:	4618      	mov	r0, r3
 80005c6:	370c      	adds	r7, #12
 80005c8:	46bd      	mov	sp, r7
 80005ca:	f85d 7b04 	ldr.w	r7, [sp], #4
 80005ce:	4770      	bx	lr

080005d0 <_isatty>:

int _isatty(int file)
{
 80005d0:	b480      	push	{r7}
 80005d2:	b083      	sub	sp, #12
 80005d4:	af00      	add	r7, sp, #0
 80005d6:	6078      	str	r0, [r7, #4]
	return 1;
 80005d8:	2301      	movs	r3, #1
}
 80005da:	4618      	mov	r0, r3
 80005dc:	370c      	adds	r7, #12
 80005de:	46bd      	mov	sp, r7
 80005e0:	f85d 7b04 	ldr.w	r7, [sp], #4
 80005e4:	4770      	bx	lr

080005e6 <_lseek>:

int _lseek(int file, int ptr, int dir)
{
 80005e6:	b480      	push	{r7}
 80005e8:	b085      	sub	sp, #20
 80005ea:	af00      	add	r7, sp, #0
 80005ec:	60f8      	str	r0, [r7, #12]
 80005ee:	60b9      	str	r1, [r7, #8]
 80005f0:	607a      	str	r2, [r7, #4]
	return 0;
 80005f2:	2300      	movs	r3, #0
}
 80005f4:	4618      	mov	r0, r3
 80005f6:	3714      	adds	r7, #20
 80005f8:	46bd      	mov	sp, r7
 80005fa:	f85d 7b04 	ldr.w	r7, [sp], #4
 80005fe:	4770      	bx	lr

08000600 <_sbrk>:
 *
 * @param incr Memory size
 * @return Pointer to allocated memory
 */
void *_sbrk(ptrdiff_t incr)
{
 8000600:	b580      	push	{r7, lr}
 8000602:	b086      	sub	sp, #24
 8000604:	af00      	add	r7, sp, #0
 8000606:	6078      	str	r0, [r7, #4]
  extern uint8_t _end; /* Symbol defined in the linker script */
  extern uint8_t _estack; /* Symbol defined in the linker script */
  extern uint32_t _Min_Stack_Size; /* Symbol defined in the linker script */
  const uint32_t stack_limit = (uint32_t)&_estack - (uint32_t)&_Min_Stack_Size;
 8000608:	4a14      	ldr	r2, [pc, #80]	; (800065c <_sbrk+0x5c>)
 800060a:	4b15      	ldr	r3, [pc, #84]	; (8000660 <_sbrk+0x60>)
 800060c:	1ad3      	subs	r3, r2, r3
 800060e:	617b      	str	r3, [r7, #20]
  const uint8_t *max_heap = (uint8_t *)stack_limit;
 8000610:	697b      	ldr	r3, [r7, #20]
 8000612:	613b      	str	r3, [r7, #16]
  uint8_t *prev_heap_end;

  /* Initialize heap end at first call */
  if (NULL == __sbrk_heap_end)
 8000614:	4b13      	ldr	r3, [pc, #76]	; (8000664 <_sbrk+0x64>)
 8000616:	681b      	ldr	r3, [r3, #0]
 8000618:	2b00      	cmp	r3, #0
 800061a:	d102      	bne.n	8000622 <_sbrk+0x22>
  {
    __sbrk_heap_end = &_end;
 800061c:	4b11      	ldr	r3, [pc, #68]	; (8000664 <_sbrk+0x64>)
 800061e:	4a12      	ldr	r2, [pc, #72]	; (8000668 <_sbrk+0x68>)
 8000620:	601a      	str	r2, [r3, #0]
  }

  /* Protect heap from growing into the reserved MSP stack */
  if (__sbrk_heap_end + incr > max_heap)
 8000622:	4b10      	ldr	r3, [pc, #64]	; (8000664 <_sbrk+0x64>)
 8000624:	681a      	ldr	r2, [r3, #0]
 8000626:	687b      	ldr	r3, [r7, #4]
 8000628:	4413      	add	r3, r2
 800062a:	693a      	ldr	r2, [r7, #16]
 800062c:	429a      	cmp	r2, r3
 800062e:	d207      	bcs.n	8000640 <_sbrk+0x40>
  {
    errno = ENOMEM;
 8000630:	f000 f846 	bl	80006c0 <__errno>
 8000634:	4603      	mov	r3, r0
 8000636:	220c      	movs	r2, #12
 8000638:	601a      	str	r2, [r3, #0]
    return (void *)-1;
 800063a:	f04f 33ff 	mov.w	r3, #4294967295
 800063e:	e009      	b.n	8000654 <_sbrk+0x54>
  }

  prev_heap_end = __sbrk_heap_end;
 8000640:	4b08      	ldr	r3, [pc, #32]	; (8000664 <_sbrk+0x64>)
 8000642:	681b      	ldr	r3, [r3, #0]
 8000644:	60fb      	str	r3, [r7, #12]
  __sbrk_heap_end += incr;
 8000646:	4b07      	ldr	r3, [pc, #28]	; (8000664 <_sbrk+0x64>)
 8000648:	681a      	ldr	r2, [r3, #0]
 800064a:	687b      	ldr	r3, [r7, #4]
 800064c:	4413      	add	r3, r2
 800064e:	4a05      	ldr	r2, [pc, #20]	; (8000664 <_sbrk+0x64>)
 8000650:	6013      	str	r3, [r2, #0]

  return (void *)prev_heap_end;
 8000652:	68fb      	ldr	r3, [r7, #12]
}
 8000654:	4618      	mov	r0, r3
 8000656:	3718      	adds	r7, #24
 8000658:	46bd      	mov	sp, r7
 800065a:	bd80      	pop	{r7, pc}
 800065c:	20020000 	.word	0x20020000
 8000660:	00000400 	.word	0x00000400
 8000664:	200000c8 	.word	0x200000c8
 8000668:	200000e0 	.word	0x200000e0

0800066c <Reset_Handler>:

  .section .text.Reset_Handler
  .weak Reset_Handler
  .type Reset_Handler, %function
Reset_Handler:
  ldr   r0, =_estack
 800066c:	480d      	ldr	r0, [pc, #52]	; (80006a4 <LoopForever+0x2>)
  mov   sp, r0          /* set stack pointer */
 800066e:	4685      	mov	sp, r0
/* Call the clock system initialization function.*/
  bl  SystemInit
 8000670:	f3af 8000 	nop.w

/* Copy the data segment initializers from flash to SRAM */
  ldr r0, =_sdata
 8000674:	480c      	ldr	r0, [pc, #48]	; (80006a8 <LoopForever+0x6>)
  ldr r1, =_edata
 8000676:	490d      	ldr	r1, [pc, #52]	; (80006ac <LoopForever+0xa>)
  ldr r2, =_sidata
 8000678:	4a0d      	ldr	r2, [pc, #52]	; (80006b0 <LoopForever+0xe>)
  movs r3, #0
 800067a:	2300      	movs	r3, #0
  b LoopCopyDataInit
 800067c:	e002      	b.n	8000684 <LoopCopyDataInit>

0800067e <CopyDataInit>:

CopyDataInit:
  ldr r4, [r2, r3]
 800067e:	58d4      	ldr	r4, [r2, r3]
  str r4, [r0, r3]
 8000680:	50c4      	str	r4, [r0, r3]
  adds r3, r3, #4
 8000682:	3304      	adds	r3, #4

08000684 <LoopCopyDataInit>:

LoopCopyDataInit:
  adds r4, r0, r3
 8000684:	18c4      	adds	r4, r0, r3
  cmp r4, r1
 8000686:	428c      	cmp	r4, r1
  bcc CopyDataInit
 8000688:	d3f9      	bcc.n	800067e <CopyDataInit>

/* Zero fill the bss segment. */
  ldr r2, =_sbss
 800068a:	4a0a      	ldr	r2, [pc, #40]	; (80006b4 <LoopForever+0x12>)
  ldr r4, =_ebss
 800068c:	4c0a      	ldr	r4, [pc, #40]	; (80006b8 <LoopForever+0x16>)
  movs r3, #0
 800068e:	2300      	movs	r3, #0
  b LoopFillZerobss
 8000690:	e001      	b.n	8000696 <LoopFillZerobss>

08000692 <FillZerobss>:

FillZerobss:
  str  r3, [r2]
 8000692:	6013      	str	r3, [r2, #0]
  adds r2, r2, #4
 8000694:	3204      	adds	r2, #4

08000696 <LoopFillZerobss>:

LoopFillZerobss:
  cmp r2, r4
 8000696:	42a2      	cmp	r2, r4
  bcc FillZerobss
 8000698:	d3fb      	bcc.n	8000692 <FillZerobss>

/* Call static constructors */
  bl __libc_init_array
 800069a:	f000 f817 	bl	80006cc <__libc_init_array>
/* Call the application's entry point.*/
  bl main
 800069e:	f7ff fee1 	bl	8000464 <main>

080006a2 <LoopForever>:

LoopForever:
    b LoopForever
 80006a2:	e7fe      	b.n	80006a2 <LoopForever>
  ldr   r0, =_estack
 80006a4:	20020000 	.word	0x20020000
  ldr r0, =_sdata
 80006a8:	20000000 	.word	0x20000000
  ldr r1, =_edata
 80006ac:	200000ac 	.word	0x200000ac
  ldr r2, =_sidata
 80006b0:	08001a44 	.word	0x08001a44
  ldr r2, =_sbss
 80006b4:	200000ac 	.word	0x200000ac
  ldr r4, =_ebss
 80006b8:	200000dc 	.word	0x200000dc

080006bc <ADC_IRQHandler>:
 * @retval : None
*/
  .section .text.Default_Handler,"ax",%progbits
Default_Handler:
Infinite_Loop:
  b Infinite_Loop
 80006bc:	e7fe      	b.n	80006bc <ADC_IRQHandler>
	...

080006c0 <__errno>:
 80006c0:	4b01      	ldr	r3, [pc, #4]	; (80006c8 <__errno+0x8>)
 80006c2:	6818      	ldr	r0, [r3, #0]
 80006c4:	4770      	bx	lr
 80006c6:	bf00      	nop
 80006c8:	20000048 	.word	0x20000048

080006cc <__libc_init_array>:
 80006cc:	b570      	push	{r4, r5, r6, lr}
 80006ce:	4d0d      	ldr	r5, [pc, #52]	; (8000704 <__libc_init_array+0x38>)
 80006d0:	4c0d      	ldr	r4, [pc, #52]	; (8000708 <__libc_init_array+0x3c>)
 80006d2:	1b64      	subs	r4, r4, r5
 80006d4:	10a4      	asrs	r4, r4, #2
 80006d6:	2600      	movs	r6, #0
 80006d8:	42a6      	cmp	r6, r4
 80006da:	d109      	bne.n	80006f0 <__libc_init_array+0x24>
 80006dc:	4d0b      	ldr	r5, [pc, #44]	; (800070c <__libc_init_array+0x40>)
 80006de:	4c0c      	ldr	r4, [pc, #48]	; (8000710 <__libc_init_array+0x44>)
 80006e0:	f001 f8ce 	bl	8001880 <_init>
 80006e4:	1b64      	subs	r4, r4, r5
 80006e6:	10a4      	asrs	r4, r4, #2
 80006e8:	2600      	movs	r6, #0
 80006ea:	42a6      	cmp	r6, r4
 80006ec:	d105      	bne.n	80006fa <__libc_init_array+0x2e>
 80006ee:	bd70      	pop	{r4, r5, r6, pc}
 80006f0:	f855 3b04 	ldr.w	r3, [r5], #4
 80006f4:	4798      	blx	r3
 80006f6:	3601      	adds	r6, #1
 80006f8:	e7ee      	b.n	80006d8 <__libc_init_array+0xc>
 80006fa:	f855 3b04 	ldr.w	r3, [r5], #4
 80006fe:	4798      	blx	r3
 8000700:	3601      	adds	r6, #1
 8000702:	e7f2      	b.n	80006ea <__libc_init_array+0x1e>
 8000704:	08001a3c 	.word	0x08001a3c
 8000708:	08001a3c 	.word	0x08001a3c
 800070c:	08001a3c 	.word	0x08001a3c
 8000710:	08001a40 	.word	0x08001a40

08000714 <memset>:
 8000714:	4402      	add	r2, r0
 8000716:	4603      	mov	r3, r0
 8000718:	4293      	cmp	r3, r2
 800071a:	d100      	bne.n	800071e <memset+0xa>
 800071c:	4770      	bx	lr
 800071e:	f803 1b01 	strb.w	r1, [r3], #1
 8000722:	e7f9      	b.n	8000718 <memset+0x4>

08000724 <iprintf>:
 8000724:	b40f      	push	{r0, r1, r2, r3}
 8000726:	4b0a      	ldr	r3, [pc, #40]	; (8000750 <iprintf+0x2c>)
 8000728:	b513      	push	{r0, r1, r4, lr}
 800072a:	681c      	ldr	r4, [r3, #0]
 800072c:	b124      	cbz	r4, 8000738 <iprintf+0x14>
 800072e:	69a3      	ldr	r3, [r4, #24]
 8000730:	b913      	cbnz	r3, 8000738 <iprintf+0x14>
 8000732:	4620      	mov	r0, r4
 8000734:	f000 f8d8 	bl	80008e8 <__sinit>
 8000738:	ab05      	add	r3, sp, #20
 800073a:	9a04      	ldr	r2, [sp, #16]
 800073c:	68a1      	ldr	r1, [r4, #8]
 800073e:	9301      	str	r3, [sp, #4]
 8000740:	4620      	mov	r0, r4
 8000742:	f000 fa95 	bl	8000c70 <_vfiprintf_r>
 8000746:	b002      	add	sp, #8
 8000748:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 800074c:	b004      	add	sp, #16
 800074e:	4770      	bx	lr
 8000750:	20000048 	.word	0x20000048

08000754 <putchar>:
 8000754:	4b09      	ldr	r3, [pc, #36]	; (800077c <putchar+0x28>)
 8000756:	b513      	push	{r0, r1, r4, lr}
 8000758:	681c      	ldr	r4, [r3, #0]
 800075a:	4601      	mov	r1, r0
 800075c:	b134      	cbz	r4, 800076c <putchar+0x18>
 800075e:	69a3      	ldr	r3, [r4, #24]
 8000760:	b923      	cbnz	r3, 800076c <putchar+0x18>
 8000762:	9001      	str	r0, [sp, #4]
 8000764:	4620      	mov	r0, r4
 8000766:	f000 f8bf 	bl	80008e8 <__sinit>
 800076a:	9901      	ldr	r1, [sp, #4]
 800076c:	68a2      	ldr	r2, [r4, #8]
 800076e:	4620      	mov	r0, r4
 8000770:	b002      	add	sp, #8
 8000772:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 8000776:	f000 bd3f 	b.w	80011f8 <_putc_r>
 800077a:	bf00      	nop
 800077c:	20000048 	.word	0x20000048

08000780 <rand>:
 8000780:	4b16      	ldr	r3, [pc, #88]	; (80007dc <rand+0x5c>)
 8000782:	b510      	push	{r4, lr}
 8000784:	681c      	ldr	r4, [r3, #0]
 8000786:	6ba3      	ldr	r3, [r4, #56]	; 0x38
 8000788:	b9b3      	cbnz	r3, 80007b8 <rand+0x38>
 800078a:	2018      	movs	r0, #24
 800078c:	f000 f95e 	bl	8000a4c <malloc>
 8000790:	63a0      	str	r0, [r4, #56]	; 0x38
 8000792:	b928      	cbnz	r0, 80007a0 <rand+0x20>
 8000794:	4602      	mov	r2, r0
 8000796:	4b12      	ldr	r3, [pc, #72]	; (80007e0 <rand+0x60>)
 8000798:	4812      	ldr	r0, [pc, #72]	; (80007e4 <rand+0x64>)
 800079a:	214e      	movs	r1, #78	; 0x4e
 800079c:	f000 f82e 	bl	80007fc <__assert_func>
 80007a0:	4a11      	ldr	r2, [pc, #68]	; (80007e8 <rand+0x68>)
 80007a2:	4b12      	ldr	r3, [pc, #72]	; (80007ec <rand+0x6c>)
 80007a4:	e9c0 2300 	strd	r2, r3, [r0]
 80007a8:	4b11      	ldr	r3, [pc, #68]	; (80007f0 <rand+0x70>)
 80007aa:	6083      	str	r3, [r0, #8]
 80007ac:	230b      	movs	r3, #11
 80007ae:	8183      	strh	r3, [r0, #12]
 80007b0:	2201      	movs	r2, #1
 80007b2:	2300      	movs	r3, #0
 80007b4:	e9c0 2304 	strd	r2, r3, [r0, #16]
 80007b8:	6ba4      	ldr	r4, [r4, #56]	; 0x38
 80007ba:	4a0e      	ldr	r2, [pc, #56]	; (80007f4 <rand+0x74>)
 80007bc:	6920      	ldr	r0, [r4, #16]
 80007be:	6963      	ldr	r3, [r4, #20]
 80007c0:	490d      	ldr	r1, [pc, #52]	; (80007f8 <rand+0x78>)
 80007c2:	4342      	muls	r2, r0
 80007c4:	fb01 2203 	mla	r2, r1, r3, r2
 80007c8:	fba0 0101 	umull	r0, r1, r0, r1
 80007cc:	1c43      	adds	r3, r0, #1
 80007ce:	eb42 0001 	adc.w	r0, r2, r1
 80007d2:	e9c4 3004 	strd	r3, r0, [r4, #16]
 80007d6:	f020 4000 	bic.w	r0, r0, #2147483648	; 0x80000000
 80007da:	bd10      	pop	{r4, pc}
 80007dc:	20000048 	.word	0x20000048
 80007e0:	080018f8 	.word	0x080018f8
 80007e4:	0800190f 	.word	0x0800190f
 80007e8:	abcd330e 	.word	0xabcd330e
 80007ec:	e66d1234 	.word	0xe66d1234
 80007f0:	0005deec 	.word	0x0005deec
 80007f4:	5851f42d 	.word	0x5851f42d
 80007f8:	4c957f2d 	.word	0x4c957f2d

080007fc <__assert_func>:
 80007fc:	b51f      	push	{r0, r1, r2, r3, r4, lr}
 80007fe:	4614      	mov	r4, r2
 8000800:	461a      	mov	r2, r3
 8000802:	4b09      	ldr	r3, [pc, #36]	; (8000828 <__assert_func+0x2c>)
 8000804:	681b      	ldr	r3, [r3, #0]
 8000806:	4605      	mov	r5, r0
 8000808:	68d8      	ldr	r0, [r3, #12]
 800080a:	b14c      	cbz	r4, 8000820 <__assert_func+0x24>
 800080c:	4b07      	ldr	r3, [pc, #28]	; (800082c <__assert_func+0x30>)
 800080e:	9100      	str	r1, [sp, #0]
 8000810:	e9cd 3401 	strd	r3, r4, [sp, #4]
 8000814:	4906      	ldr	r1, [pc, #24]	; (8000830 <__assert_func+0x34>)
 8000816:	462b      	mov	r3, r5
 8000818:	f000 f8e4 	bl	80009e4 <fiprintf>
 800081c:	f000 fe5a 	bl	80014d4 <abort>
 8000820:	4b04      	ldr	r3, [pc, #16]	; (8000834 <__assert_func+0x38>)
 8000822:	461c      	mov	r4, r3
 8000824:	e7f3      	b.n	800080e <__assert_func+0x12>
 8000826:	bf00      	nop
 8000828:	20000048 	.word	0x20000048
 800082c:	0800196a 	.word	0x0800196a
 8000830:	08001977 	.word	0x08001977
 8000834:	080019a5 	.word	0x080019a5

08000838 <std>:
 8000838:	2300      	movs	r3, #0
 800083a:	b510      	push	{r4, lr}
 800083c:	4604      	mov	r4, r0
 800083e:	e9c0 3300 	strd	r3, r3, [r0]
 8000842:	e9c0 3304 	strd	r3, r3, [r0, #16]
 8000846:	6083      	str	r3, [r0, #8]
 8000848:	8181      	strh	r1, [r0, #12]
 800084a:	6643      	str	r3, [r0, #100]	; 0x64
 800084c:	81c2      	strh	r2, [r0, #14]
 800084e:	6183      	str	r3, [r0, #24]
 8000850:	4619      	mov	r1, r3
 8000852:	2208      	movs	r2, #8
 8000854:	305c      	adds	r0, #92	; 0x5c
 8000856:	f7ff ff5d 	bl	8000714 <memset>
 800085a:	4b05      	ldr	r3, [pc, #20]	; (8000870 <std+0x38>)
 800085c:	6263      	str	r3, [r4, #36]	; 0x24
 800085e:	4b05      	ldr	r3, [pc, #20]	; (8000874 <std+0x3c>)
 8000860:	62a3      	str	r3, [r4, #40]	; 0x28
 8000862:	4b05      	ldr	r3, [pc, #20]	; (8000878 <std+0x40>)
 8000864:	62e3      	str	r3, [r4, #44]	; 0x2c
 8000866:	4b05      	ldr	r3, [pc, #20]	; (800087c <std+0x44>)
 8000868:	6224      	str	r4, [r4, #32]
 800086a:	6323      	str	r3, [r4, #48]	; 0x30
 800086c:	bd10      	pop	{r4, pc}
 800086e:	bf00      	nop
 8000870:	080012a9 	.word	0x080012a9
 8000874:	080012cb 	.word	0x080012cb
 8000878:	08001303 	.word	0x08001303
 800087c:	08001327 	.word	0x08001327

08000880 <_cleanup_r>:
 8000880:	4901      	ldr	r1, [pc, #4]	; (8000888 <_cleanup_r+0x8>)
 8000882:	f000 b8c1 	b.w	8000a08 <_fwalk_reent>
 8000886:	bf00      	nop
 8000888:	08001611 	.word	0x08001611

0800088c <__sfmoreglue>:
 800088c:	b570      	push	{r4, r5, r6, lr}
 800088e:	2268      	movs	r2, #104	; 0x68
 8000890:	1e4d      	subs	r5, r1, #1
 8000892:	4355      	muls	r5, r2
 8000894:	460e      	mov	r6, r1
 8000896:	f105 0174 	add.w	r1, r5, #116	; 0x74
 800089a:	f000 f94b 	bl	8000b34 <_malloc_r>
 800089e:	4604      	mov	r4, r0
 80008a0:	b140      	cbz	r0, 80008b4 <__sfmoreglue+0x28>
 80008a2:	2100      	movs	r1, #0
 80008a4:	e9c0 1600 	strd	r1, r6, [r0]
 80008a8:	300c      	adds	r0, #12
 80008aa:	60a0      	str	r0, [r4, #8]
 80008ac:	f105 0268 	add.w	r2, r5, #104	; 0x68
 80008b0:	f7ff ff30 	bl	8000714 <memset>
 80008b4:	4620      	mov	r0, r4
 80008b6:	bd70      	pop	{r4, r5, r6, pc}

080008b8 <__sfp_lock_acquire>:
 80008b8:	4801      	ldr	r0, [pc, #4]	; (80008c0 <__sfp_lock_acquire+0x8>)
 80008ba:	f000 b8c5 	b.w	8000a48 <__retarget_lock_acquire_recursive>
 80008be:	bf00      	nop
 80008c0:	200000cd 	.word	0x200000cd

080008c4 <__sfp_lock_release>:
 80008c4:	4801      	ldr	r0, [pc, #4]	; (80008cc <__sfp_lock_release+0x8>)
 80008c6:	f000 b8c0 	b.w	8000a4a <__retarget_lock_release_recursive>
 80008ca:	bf00      	nop
 80008cc:	200000cd 	.word	0x200000cd

080008d0 <__sinit_lock_acquire>:
 80008d0:	4801      	ldr	r0, [pc, #4]	; (80008d8 <__sinit_lock_acquire+0x8>)
 80008d2:	f000 b8b9 	b.w	8000a48 <__retarget_lock_acquire_recursive>
 80008d6:	bf00      	nop
 80008d8:	200000ce 	.word	0x200000ce

080008dc <__sinit_lock_release>:
 80008dc:	4801      	ldr	r0, [pc, #4]	; (80008e4 <__sinit_lock_release+0x8>)
 80008de:	f000 b8b4 	b.w	8000a4a <__retarget_lock_release_recursive>
 80008e2:	bf00      	nop
 80008e4:	200000ce 	.word	0x200000ce

080008e8 <__sinit>:
 80008e8:	b510      	push	{r4, lr}
 80008ea:	4604      	mov	r4, r0
 80008ec:	f7ff fff0 	bl	80008d0 <__sinit_lock_acquire>
 80008f0:	69a3      	ldr	r3, [r4, #24]
 80008f2:	b11b      	cbz	r3, 80008fc <__sinit+0x14>
 80008f4:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 80008f8:	f7ff bff0 	b.w	80008dc <__sinit_lock_release>
 80008fc:	e9c4 3312 	strd	r3, r3, [r4, #72]	; 0x48
 8000900:	6523      	str	r3, [r4, #80]	; 0x50
 8000902:	4b13      	ldr	r3, [pc, #76]	; (8000950 <__sinit+0x68>)
 8000904:	4a13      	ldr	r2, [pc, #76]	; (8000954 <__sinit+0x6c>)
 8000906:	681b      	ldr	r3, [r3, #0]
 8000908:	62a2      	str	r2, [r4, #40]	; 0x28
 800090a:	42a3      	cmp	r3, r4
 800090c:	bf04      	itt	eq
 800090e:	2301      	moveq	r3, #1
 8000910:	61a3      	streq	r3, [r4, #24]
 8000912:	4620      	mov	r0, r4
 8000914:	f000 f820 	bl	8000958 <__sfp>
 8000918:	6060      	str	r0, [r4, #4]
 800091a:	4620      	mov	r0, r4
 800091c:	f000 f81c 	bl	8000958 <__sfp>
 8000920:	60a0      	str	r0, [r4, #8]
 8000922:	4620      	mov	r0, r4
 8000924:	f000 f818 	bl	8000958 <__sfp>
 8000928:	2200      	movs	r2, #0
 800092a:	60e0      	str	r0, [r4, #12]
 800092c:	2104      	movs	r1, #4
 800092e:	6860      	ldr	r0, [r4, #4]
 8000930:	f7ff ff82 	bl	8000838 <std>
 8000934:	68a0      	ldr	r0, [r4, #8]
 8000936:	2201      	movs	r2, #1
 8000938:	2109      	movs	r1, #9
 800093a:	f7ff ff7d 	bl	8000838 <std>
 800093e:	68e0      	ldr	r0, [r4, #12]
 8000940:	2202      	movs	r2, #2
 8000942:	2112      	movs	r1, #18
 8000944:	f7ff ff78 	bl	8000838 <std>
 8000948:	2301      	movs	r3, #1
 800094a:	61a3      	str	r3, [r4, #24]
 800094c:	e7d2      	b.n	80008f4 <__sinit+0xc>
 800094e:	bf00      	nop
 8000950:	080018f4 	.word	0x080018f4
 8000954:	08000881 	.word	0x08000881

08000958 <__sfp>:
 8000958:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 800095a:	4607      	mov	r7, r0
 800095c:	f7ff ffac 	bl	80008b8 <__sfp_lock_acquire>
 8000960:	4b1e      	ldr	r3, [pc, #120]	; (80009dc <__sfp+0x84>)
 8000962:	681e      	ldr	r6, [r3, #0]
 8000964:	69b3      	ldr	r3, [r6, #24]
 8000966:	b913      	cbnz	r3, 800096e <__sfp+0x16>
 8000968:	4630      	mov	r0, r6
 800096a:	f7ff ffbd 	bl	80008e8 <__sinit>
 800096e:	3648      	adds	r6, #72	; 0x48
 8000970:	e9d6 3401 	ldrd	r3, r4, [r6, #4]
 8000974:	3b01      	subs	r3, #1
 8000976:	d503      	bpl.n	8000980 <__sfp+0x28>
 8000978:	6833      	ldr	r3, [r6, #0]
 800097a:	b30b      	cbz	r3, 80009c0 <__sfp+0x68>
 800097c:	6836      	ldr	r6, [r6, #0]
 800097e:	e7f7      	b.n	8000970 <__sfp+0x18>
 8000980:	f9b4 500c 	ldrsh.w	r5, [r4, #12]
 8000984:	b9d5      	cbnz	r5, 80009bc <__sfp+0x64>
 8000986:	4b16      	ldr	r3, [pc, #88]	; (80009e0 <__sfp+0x88>)
 8000988:	60e3      	str	r3, [r4, #12]
 800098a:	f104 0058 	add.w	r0, r4, #88	; 0x58
 800098e:	6665      	str	r5, [r4, #100]	; 0x64
 8000990:	f000 f859 	bl	8000a46 <__retarget_lock_init_recursive>
 8000994:	f7ff ff96 	bl	80008c4 <__sfp_lock_release>
 8000998:	e9c4 5501 	strd	r5, r5, [r4, #4]
 800099c:	e9c4 5504 	strd	r5, r5, [r4, #16]
 80009a0:	6025      	str	r5, [r4, #0]
 80009a2:	61a5      	str	r5, [r4, #24]
 80009a4:	2208      	movs	r2, #8
 80009a6:	4629      	mov	r1, r5
 80009a8:	f104 005c 	add.w	r0, r4, #92	; 0x5c
 80009ac:	f7ff feb2 	bl	8000714 <memset>
 80009b0:	e9c4 550d 	strd	r5, r5, [r4, #52]	; 0x34
 80009b4:	e9c4 5512 	strd	r5, r5, [r4, #72]	; 0x48
 80009b8:	4620      	mov	r0, r4
 80009ba:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 80009bc:	3468      	adds	r4, #104	; 0x68
 80009be:	e7d9      	b.n	8000974 <__sfp+0x1c>
 80009c0:	2104      	movs	r1, #4
 80009c2:	4638      	mov	r0, r7
 80009c4:	f7ff ff62 	bl	800088c <__sfmoreglue>
 80009c8:	4604      	mov	r4, r0
 80009ca:	6030      	str	r0, [r6, #0]
 80009cc:	2800      	cmp	r0, #0
 80009ce:	d1d5      	bne.n	800097c <__sfp+0x24>
 80009d0:	f7ff ff78 	bl	80008c4 <__sfp_lock_release>
 80009d4:	230c      	movs	r3, #12
 80009d6:	603b      	str	r3, [r7, #0]
 80009d8:	e7ee      	b.n	80009b8 <__sfp+0x60>
 80009da:	bf00      	nop
 80009dc:	080018f4 	.word	0x080018f4
 80009e0:	ffff0001 	.word	0xffff0001

080009e4 <fiprintf>:
 80009e4:	b40e      	push	{r1, r2, r3}
 80009e6:	b503      	push	{r0, r1, lr}
 80009e8:	4601      	mov	r1, r0
 80009ea:	ab03      	add	r3, sp, #12
 80009ec:	4805      	ldr	r0, [pc, #20]	; (8000a04 <fiprintf+0x20>)
 80009ee:	f853 2b04 	ldr.w	r2, [r3], #4
 80009f2:	6800      	ldr	r0, [r0, #0]
 80009f4:	9301      	str	r3, [sp, #4]
 80009f6:	f000 f93b 	bl	8000c70 <_vfiprintf_r>
 80009fa:	b002      	add	sp, #8
 80009fc:	f85d eb04 	ldr.w	lr, [sp], #4
 8000a00:	b003      	add	sp, #12
 8000a02:	4770      	bx	lr
 8000a04:	20000048 	.word	0x20000048

08000a08 <_fwalk_reent>:
 8000a08:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 8000a0c:	4606      	mov	r6, r0
 8000a0e:	4688      	mov	r8, r1
 8000a10:	f100 0448 	add.w	r4, r0, #72	; 0x48
 8000a14:	2700      	movs	r7, #0
 8000a16:	e9d4 9501 	ldrd	r9, r5, [r4, #4]
 8000a1a:	f1b9 0901 	subs.w	r9, r9, #1
 8000a1e:	d505      	bpl.n	8000a2c <_fwalk_reent+0x24>
 8000a20:	6824      	ldr	r4, [r4, #0]
 8000a22:	2c00      	cmp	r4, #0
 8000a24:	d1f7      	bne.n	8000a16 <_fwalk_reent+0xe>
 8000a26:	4638      	mov	r0, r7
 8000a28:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
 8000a2c:	89ab      	ldrh	r3, [r5, #12]
 8000a2e:	2b01      	cmp	r3, #1
 8000a30:	d907      	bls.n	8000a42 <_fwalk_reent+0x3a>
 8000a32:	f9b5 300e 	ldrsh.w	r3, [r5, #14]
 8000a36:	3301      	adds	r3, #1
 8000a38:	d003      	beq.n	8000a42 <_fwalk_reent+0x3a>
 8000a3a:	4629      	mov	r1, r5
 8000a3c:	4630      	mov	r0, r6
 8000a3e:	47c0      	blx	r8
 8000a40:	4307      	orrs	r7, r0
 8000a42:	3568      	adds	r5, #104	; 0x68
 8000a44:	e7e9      	b.n	8000a1a <_fwalk_reent+0x12>

08000a46 <__retarget_lock_init_recursive>:
 8000a46:	4770      	bx	lr

08000a48 <__retarget_lock_acquire_recursive>:
 8000a48:	4770      	bx	lr

08000a4a <__retarget_lock_release_recursive>:
 8000a4a:	4770      	bx	lr

08000a4c <malloc>:
 8000a4c:	4b02      	ldr	r3, [pc, #8]	; (8000a58 <malloc+0xc>)
 8000a4e:	4601      	mov	r1, r0
 8000a50:	6818      	ldr	r0, [r3, #0]
 8000a52:	f000 b86f 	b.w	8000b34 <_malloc_r>
 8000a56:	bf00      	nop
 8000a58:	20000048 	.word	0x20000048

08000a5c <_free_r>:
 8000a5c:	b537      	push	{r0, r1, r2, r4, r5, lr}
 8000a5e:	2900      	cmp	r1, #0
 8000a60:	d044      	beq.n	8000aec <_free_r+0x90>
 8000a62:	f851 3c04 	ldr.w	r3, [r1, #-4]
 8000a66:	9001      	str	r0, [sp, #4]
 8000a68:	2b00      	cmp	r3, #0
 8000a6a:	f1a1 0404 	sub.w	r4, r1, #4
 8000a6e:	bfb8      	it	lt
 8000a70:	18e4      	addlt	r4, r4, r3
 8000a72:	f000 fe81 	bl	8001778 <__malloc_lock>
 8000a76:	4a1e      	ldr	r2, [pc, #120]	; (8000af0 <_free_r+0x94>)
 8000a78:	9801      	ldr	r0, [sp, #4]
 8000a7a:	6813      	ldr	r3, [r2, #0]
 8000a7c:	b933      	cbnz	r3, 8000a8c <_free_r+0x30>
 8000a7e:	6063      	str	r3, [r4, #4]
 8000a80:	6014      	str	r4, [r2, #0]
 8000a82:	b003      	add	sp, #12
 8000a84:	e8bd 4030 	ldmia.w	sp!, {r4, r5, lr}
 8000a88:	f000 be7c 	b.w	8001784 <__malloc_unlock>
 8000a8c:	42a3      	cmp	r3, r4
 8000a8e:	d908      	bls.n	8000aa2 <_free_r+0x46>
 8000a90:	6825      	ldr	r5, [r4, #0]
 8000a92:	1961      	adds	r1, r4, r5
 8000a94:	428b      	cmp	r3, r1
 8000a96:	bf01      	itttt	eq
 8000a98:	6819      	ldreq	r1, [r3, #0]
 8000a9a:	685b      	ldreq	r3, [r3, #4]
 8000a9c:	1949      	addeq	r1, r1, r5
 8000a9e:	6021      	streq	r1, [r4, #0]
 8000aa0:	e7ed      	b.n	8000a7e <_free_r+0x22>
 8000aa2:	461a      	mov	r2, r3
 8000aa4:	685b      	ldr	r3, [r3, #4]
 8000aa6:	b10b      	cbz	r3, 8000aac <_free_r+0x50>
 8000aa8:	42a3      	cmp	r3, r4
 8000aaa:	d9fa      	bls.n	8000aa2 <_free_r+0x46>
 8000aac:	6811      	ldr	r1, [r2, #0]
 8000aae:	1855      	adds	r5, r2, r1
 8000ab0:	42a5      	cmp	r5, r4
 8000ab2:	d10b      	bne.n	8000acc <_free_r+0x70>
 8000ab4:	6824      	ldr	r4, [r4, #0]
 8000ab6:	4421      	add	r1, r4
 8000ab8:	1854      	adds	r4, r2, r1
 8000aba:	42a3      	cmp	r3, r4
 8000abc:	6011      	str	r1, [r2, #0]
 8000abe:	d1e0      	bne.n	8000a82 <_free_r+0x26>
 8000ac0:	681c      	ldr	r4, [r3, #0]
 8000ac2:	685b      	ldr	r3, [r3, #4]
 8000ac4:	6053      	str	r3, [r2, #4]
 8000ac6:	4421      	add	r1, r4
 8000ac8:	6011      	str	r1, [r2, #0]
 8000aca:	e7da      	b.n	8000a82 <_free_r+0x26>
 8000acc:	d902      	bls.n	8000ad4 <_free_r+0x78>
 8000ace:	230c      	movs	r3, #12
 8000ad0:	6003      	str	r3, [r0, #0]
 8000ad2:	e7d6      	b.n	8000a82 <_free_r+0x26>
 8000ad4:	6825      	ldr	r5, [r4, #0]
 8000ad6:	1961      	adds	r1, r4, r5
 8000ad8:	428b      	cmp	r3, r1
 8000ada:	bf04      	itt	eq
 8000adc:	6819      	ldreq	r1, [r3, #0]
 8000ade:	685b      	ldreq	r3, [r3, #4]
 8000ae0:	6063      	str	r3, [r4, #4]
 8000ae2:	bf04      	itt	eq
 8000ae4:	1949      	addeq	r1, r1, r5
 8000ae6:	6021      	streq	r1, [r4, #0]
 8000ae8:	6054      	str	r4, [r2, #4]
 8000aea:	e7ca      	b.n	8000a82 <_free_r+0x26>
 8000aec:	b003      	add	sp, #12
 8000aee:	bd30      	pop	{r4, r5, pc}
 8000af0:	200000d0 	.word	0x200000d0

08000af4 <sbrk_aligned>:
 8000af4:	b570      	push	{r4, r5, r6, lr}
 8000af6:	4e0e      	ldr	r6, [pc, #56]	; (8000b30 <sbrk_aligned+0x3c>)
 8000af8:	460c      	mov	r4, r1
 8000afa:	6831      	ldr	r1, [r6, #0]
 8000afc:	4605      	mov	r5, r0
 8000afe:	b911      	cbnz	r1, 8000b06 <sbrk_aligned+0x12>
 8000b00:	f000 fbc2 	bl	8001288 <_sbrk_r>
 8000b04:	6030      	str	r0, [r6, #0]
 8000b06:	4621      	mov	r1, r4
 8000b08:	4628      	mov	r0, r5
 8000b0a:	f000 fbbd 	bl	8001288 <_sbrk_r>
 8000b0e:	1c43      	adds	r3, r0, #1
 8000b10:	d00a      	beq.n	8000b28 <sbrk_aligned+0x34>
 8000b12:	1cc4      	adds	r4, r0, #3
 8000b14:	f024 0403 	bic.w	r4, r4, #3
 8000b18:	42a0      	cmp	r0, r4
 8000b1a:	d007      	beq.n	8000b2c <sbrk_aligned+0x38>
 8000b1c:	1a21      	subs	r1, r4, r0
 8000b1e:	4628      	mov	r0, r5
 8000b20:	f000 fbb2 	bl	8001288 <_sbrk_r>
 8000b24:	3001      	adds	r0, #1
 8000b26:	d101      	bne.n	8000b2c <sbrk_aligned+0x38>
 8000b28:	f04f 34ff 	mov.w	r4, #4294967295
 8000b2c:	4620      	mov	r0, r4
 8000b2e:	bd70      	pop	{r4, r5, r6, pc}
 8000b30:	200000d4 	.word	0x200000d4

08000b34 <_malloc_r>:
 8000b34:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8000b38:	1ccd      	adds	r5, r1, #3
 8000b3a:	f025 0503 	bic.w	r5, r5, #3
 8000b3e:	3508      	adds	r5, #8
 8000b40:	2d0c      	cmp	r5, #12
 8000b42:	bf38      	it	cc
 8000b44:	250c      	movcc	r5, #12
 8000b46:	2d00      	cmp	r5, #0
 8000b48:	4607      	mov	r7, r0
 8000b4a:	db01      	blt.n	8000b50 <_malloc_r+0x1c>
 8000b4c:	42a9      	cmp	r1, r5
 8000b4e:	d905      	bls.n	8000b5c <_malloc_r+0x28>
 8000b50:	230c      	movs	r3, #12
 8000b52:	603b      	str	r3, [r7, #0]
 8000b54:	2600      	movs	r6, #0
 8000b56:	4630      	mov	r0, r6
 8000b58:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 8000b5c:	4e2e      	ldr	r6, [pc, #184]	; (8000c18 <_malloc_r+0xe4>)
 8000b5e:	f000 fe0b 	bl	8001778 <__malloc_lock>
 8000b62:	6833      	ldr	r3, [r6, #0]
 8000b64:	461c      	mov	r4, r3
 8000b66:	bb34      	cbnz	r4, 8000bb6 <_malloc_r+0x82>
 8000b68:	4629      	mov	r1, r5
 8000b6a:	4638      	mov	r0, r7
 8000b6c:	f7ff ffc2 	bl	8000af4 <sbrk_aligned>
 8000b70:	1c43      	adds	r3, r0, #1
 8000b72:	4604      	mov	r4, r0
 8000b74:	d14d      	bne.n	8000c12 <_malloc_r+0xde>
 8000b76:	6834      	ldr	r4, [r6, #0]
 8000b78:	4626      	mov	r6, r4
 8000b7a:	2e00      	cmp	r6, #0
 8000b7c:	d140      	bne.n	8000c00 <_malloc_r+0xcc>
 8000b7e:	6823      	ldr	r3, [r4, #0]
 8000b80:	4631      	mov	r1, r6
 8000b82:	4638      	mov	r0, r7
 8000b84:	eb04 0803 	add.w	r8, r4, r3
 8000b88:	f000 fb7e 	bl	8001288 <_sbrk_r>
 8000b8c:	4580      	cmp	r8, r0
 8000b8e:	d13a      	bne.n	8000c06 <_malloc_r+0xd2>
 8000b90:	6821      	ldr	r1, [r4, #0]
 8000b92:	3503      	adds	r5, #3
 8000b94:	1a6d      	subs	r5, r5, r1
 8000b96:	f025 0503 	bic.w	r5, r5, #3
 8000b9a:	3508      	adds	r5, #8
 8000b9c:	2d0c      	cmp	r5, #12
 8000b9e:	bf38      	it	cc
 8000ba0:	250c      	movcc	r5, #12
 8000ba2:	4629      	mov	r1, r5
 8000ba4:	4638      	mov	r0, r7
 8000ba6:	f7ff ffa5 	bl	8000af4 <sbrk_aligned>
 8000baa:	3001      	adds	r0, #1
 8000bac:	d02b      	beq.n	8000c06 <_malloc_r+0xd2>
 8000bae:	6823      	ldr	r3, [r4, #0]
 8000bb0:	442b      	add	r3, r5
 8000bb2:	6023      	str	r3, [r4, #0]
 8000bb4:	e00e      	b.n	8000bd4 <_malloc_r+0xa0>
 8000bb6:	6822      	ldr	r2, [r4, #0]
 8000bb8:	1b52      	subs	r2, r2, r5
 8000bba:	d41e      	bmi.n	8000bfa <_malloc_r+0xc6>
 8000bbc:	2a0b      	cmp	r2, #11
 8000bbe:	d916      	bls.n	8000bee <_malloc_r+0xba>
 8000bc0:	1961      	adds	r1, r4, r5
 8000bc2:	42a3      	cmp	r3, r4
 8000bc4:	6025      	str	r5, [r4, #0]
 8000bc6:	bf18      	it	ne
 8000bc8:	6059      	strne	r1, [r3, #4]
 8000bca:	6863      	ldr	r3, [r4, #4]
 8000bcc:	bf08      	it	eq
 8000bce:	6031      	streq	r1, [r6, #0]
 8000bd0:	5162      	str	r2, [r4, r5]
 8000bd2:	604b      	str	r3, [r1, #4]
 8000bd4:	4638      	mov	r0, r7
 8000bd6:	f104 060b 	add.w	r6, r4, #11
 8000bda:	f000 fdd3 	bl	8001784 <__malloc_unlock>
 8000bde:	f026 0607 	bic.w	r6, r6, #7
 8000be2:	1d23      	adds	r3, r4, #4
 8000be4:	1af2      	subs	r2, r6, r3
 8000be6:	d0b6      	beq.n	8000b56 <_malloc_r+0x22>
 8000be8:	1b9b      	subs	r3, r3, r6
 8000bea:	50a3      	str	r3, [r4, r2]
 8000bec:	e7b3      	b.n	8000b56 <_malloc_r+0x22>
 8000bee:	6862      	ldr	r2, [r4, #4]
 8000bf0:	42a3      	cmp	r3, r4
 8000bf2:	bf0c      	ite	eq
 8000bf4:	6032      	streq	r2, [r6, #0]
 8000bf6:	605a      	strne	r2, [r3, #4]
 8000bf8:	e7ec      	b.n	8000bd4 <_malloc_r+0xa0>
 8000bfa:	4623      	mov	r3, r4
 8000bfc:	6864      	ldr	r4, [r4, #4]
 8000bfe:	e7b2      	b.n	8000b66 <_malloc_r+0x32>
 8000c00:	4634      	mov	r4, r6
 8000c02:	6876      	ldr	r6, [r6, #4]
 8000c04:	e7b9      	b.n	8000b7a <_malloc_r+0x46>
 8000c06:	230c      	movs	r3, #12
 8000c08:	603b      	str	r3, [r7, #0]
 8000c0a:	4638      	mov	r0, r7
 8000c0c:	f000 fdba 	bl	8001784 <__malloc_unlock>
 8000c10:	e7a1      	b.n	8000b56 <_malloc_r+0x22>
 8000c12:	6025      	str	r5, [r4, #0]
 8000c14:	e7de      	b.n	8000bd4 <_malloc_r+0xa0>
 8000c16:	bf00      	nop
 8000c18:	200000d0 	.word	0x200000d0

08000c1c <__sfputc_r>:
 8000c1c:	6893      	ldr	r3, [r2, #8]
 8000c1e:	3b01      	subs	r3, #1
 8000c20:	2b00      	cmp	r3, #0
 8000c22:	b410      	push	{r4}
 8000c24:	6093      	str	r3, [r2, #8]
 8000c26:	da08      	bge.n	8000c3a <__sfputc_r+0x1e>
 8000c28:	6994      	ldr	r4, [r2, #24]
 8000c2a:	42a3      	cmp	r3, r4
 8000c2c:	db01      	blt.n	8000c32 <__sfputc_r+0x16>
 8000c2e:	290a      	cmp	r1, #10
 8000c30:	d103      	bne.n	8000c3a <__sfputc_r+0x1e>
 8000c32:	f85d 4b04 	ldr.w	r4, [sp], #4
 8000c36:	f000 bb7b 	b.w	8001330 <__swbuf_r>
 8000c3a:	6813      	ldr	r3, [r2, #0]
 8000c3c:	1c58      	adds	r0, r3, #1
 8000c3e:	6010      	str	r0, [r2, #0]
 8000c40:	7019      	strb	r1, [r3, #0]
 8000c42:	4608      	mov	r0, r1
 8000c44:	f85d 4b04 	ldr.w	r4, [sp], #4
 8000c48:	4770      	bx	lr

08000c4a <__sfputs_r>:
 8000c4a:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8000c4c:	4606      	mov	r6, r0
 8000c4e:	460f      	mov	r7, r1
 8000c50:	4614      	mov	r4, r2
 8000c52:	18d5      	adds	r5, r2, r3
 8000c54:	42ac      	cmp	r4, r5
 8000c56:	d101      	bne.n	8000c5c <__sfputs_r+0x12>
 8000c58:	2000      	movs	r0, #0
 8000c5a:	e007      	b.n	8000c6c <__sfputs_r+0x22>
 8000c5c:	f814 1b01 	ldrb.w	r1, [r4], #1
 8000c60:	463a      	mov	r2, r7
 8000c62:	4630      	mov	r0, r6
 8000c64:	f7ff ffda 	bl	8000c1c <__sfputc_r>
 8000c68:	1c43      	adds	r3, r0, #1
 8000c6a:	d1f3      	bne.n	8000c54 <__sfputs_r+0xa>
 8000c6c:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
	...

08000c70 <_vfiprintf_r>:
 8000c70:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8000c74:	460d      	mov	r5, r1
 8000c76:	b09d      	sub	sp, #116	; 0x74
 8000c78:	4614      	mov	r4, r2
 8000c7a:	4698      	mov	r8, r3
 8000c7c:	4606      	mov	r6, r0
 8000c7e:	b118      	cbz	r0, 8000c88 <_vfiprintf_r+0x18>
 8000c80:	6983      	ldr	r3, [r0, #24]
 8000c82:	b90b      	cbnz	r3, 8000c88 <_vfiprintf_r+0x18>
 8000c84:	f7ff fe30 	bl	80008e8 <__sinit>
 8000c88:	4b89      	ldr	r3, [pc, #548]	; (8000eb0 <_vfiprintf_r+0x240>)
 8000c8a:	429d      	cmp	r5, r3
 8000c8c:	d11b      	bne.n	8000cc6 <_vfiprintf_r+0x56>
 8000c8e:	6875      	ldr	r5, [r6, #4]
 8000c90:	6e6b      	ldr	r3, [r5, #100]	; 0x64
 8000c92:	07d9      	lsls	r1, r3, #31
 8000c94:	d405      	bmi.n	8000ca2 <_vfiprintf_r+0x32>
 8000c96:	89ab      	ldrh	r3, [r5, #12]
 8000c98:	059a      	lsls	r2, r3, #22
 8000c9a:	d402      	bmi.n	8000ca2 <_vfiprintf_r+0x32>
 8000c9c:	6da8      	ldr	r0, [r5, #88]	; 0x58
 8000c9e:	f7ff fed3 	bl	8000a48 <__retarget_lock_acquire_recursive>
 8000ca2:	89ab      	ldrh	r3, [r5, #12]
 8000ca4:	071b      	lsls	r3, r3, #28
 8000ca6:	d501      	bpl.n	8000cac <_vfiprintf_r+0x3c>
 8000ca8:	692b      	ldr	r3, [r5, #16]
 8000caa:	b9eb      	cbnz	r3, 8000ce8 <_vfiprintf_r+0x78>
 8000cac:	4629      	mov	r1, r5
 8000cae:	4630      	mov	r0, r6
 8000cb0:	f000 fba2 	bl	80013f8 <__swsetup_r>
 8000cb4:	b1c0      	cbz	r0, 8000ce8 <_vfiprintf_r+0x78>
 8000cb6:	6e6b      	ldr	r3, [r5, #100]	; 0x64
 8000cb8:	07dc      	lsls	r4, r3, #31
 8000cba:	d50e      	bpl.n	8000cda <_vfiprintf_r+0x6a>
 8000cbc:	f04f 30ff 	mov.w	r0, #4294967295
 8000cc0:	b01d      	add	sp, #116	; 0x74
 8000cc2:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8000cc6:	4b7b      	ldr	r3, [pc, #492]	; (8000eb4 <_vfiprintf_r+0x244>)
 8000cc8:	429d      	cmp	r5, r3
 8000cca:	d101      	bne.n	8000cd0 <_vfiprintf_r+0x60>
 8000ccc:	68b5      	ldr	r5, [r6, #8]
 8000cce:	e7df      	b.n	8000c90 <_vfiprintf_r+0x20>
 8000cd0:	4b79      	ldr	r3, [pc, #484]	; (8000eb8 <_vfiprintf_r+0x248>)
 8000cd2:	429d      	cmp	r5, r3
 8000cd4:	bf08      	it	eq
 8000cd6:	68f5      	ldreq	r5, [r6, #12]
 8000cd8:	e7da      	b.n	8000c90 <_vfiprintf_r+0x20>
 8000cda:	89ab      	ldrh	r3, [r5, #12]
 8000cdc:	0598      	lsls	r0, r3, #22
 8000cde:	d4ed      	bmi.n	8000cbc <_vfiprintf_r+0x4c>
 8000ce0:	6da8      	ldr	r0, [r5, #88]	; 0x58
 8000ce2:	f7ff feb2 	bl	8000a4a <__retarget_lock_release_recursive>
 8000ce6:	e7e9      	b.n	8000cbc <_vfiprintf_r+0x4c>
 8000ce8:	2300      	movs	r3, #0
 8000cea:	9309      	str	r3, [sp, #36]	; 0x24
 8000cec:	2320      	movs	r3, #32
 8000cee:	f88d 3029 	strb.w	r3, [sp, #41]	; 0x29
 8000cf2:	f8cd 800c 	str.w	r8, [sp, #12]
 8000cf6:	2330      	movs	r3, #48	; 0x30
 8000cf8:	f8df 81c0 	ldr.w	r8, [pc, #448]	; 8000ebc <_vfiprintf_r+0x24c>
 8000cfc:	f88d 302a 	strb.w	r3, [sp, #42]	; 0x2a
 8000d00:	f04f 0901 	mov.w	r9, #1
 8000d04:	4623      	mov	r3, r4
 8000d06:	469a      	mov	sl, r3
 8000d08:	f813 2b01 	ldrb.w	r2, [r3], #1
 8000d0c:	b10a      	cbz	r2, 8000d12 <_vfiprintf_r+0xa2>
 8000d0e:	2a25      	cmp	r2, #37	; 0x25
 8000d10:	d1f9      	bne.n	8000d06 <_vfiprintf_r+0x96>
 8000d12:	ebba 0b04 	subs.w	fp, sl, r4
 8000d16:	d00b      	beq.n	8000d30 <_vfiprintf_r+0xc0>
 8000d18:	465b      	mov	r3, fp
 8000d1a:	4622      	mov	r2, r4
 8000d1c:	4629      	mov	r1, r5
 8000d1e:	4630      	mov	r0, r6
 8000d20:	f7ff ff93 	bl	8000c4a <__sfputs_r>
 8000d24:	3001      	adds	r0, #1
 8000d26:	f000 80aa 	beq.w	8000e7e <_vfiprintf_r+0x20e>
 8000d2a:	9a09      	ldr	r2, [sp, #36]	; 0x24
 8000d2c:	445a      	add	r2, fp
 8000d2e:	9209      	str	r2, [sp, #36]	; 0x24
 8000d30:	f89a 3000 	ldrb.w	r3, [sl]
 8000d34:	2b00      	cmp	r3, #0
 8000d36:	f000 80a2 	beq.w	8000e7e <_vfiprintf_r+0x20e>
 8000d3a:	2300      	movs	r3, #0
 8000d3c:	f04f 32ff 	mov.w	r2, #4294967295
 8000d40:	e9cd 2305 	strd	r2, r3, [sp, #20]
 8000d44:	f10a 0a01 	add.w	sl, sl, #1
 8000d48:	9304      	str	r3, [sp, #16]
 8000d4a:	9307      	str	r3, [sp, #28]
 8000d4c:	f88d 3053 	strb.w	r3, [sp, #83]	; 0x53
 8000d50:	931a      	str	r3, [sp, #104]	; 0x68
 8000d52:	4654      	mov	r4, sl
 8000d54:	2205      	movs	r2, #5
 8000d56:	f814 1b01 	ldrb.w	r1, [r4], #1
 8000d5a:	4858      	ldr	r0, [pc, #352]	; (8000ebc <_vfiprintf_r+0x24c>)
 8000d5c:	f7ff fa40 	bl	80001e0 <memchr>
 8000d60:	9a04      	ldr	r2, [sp, #16]
 8000d62:	b9d8      	cbnz	r0, 8000d9c <_vfiprintf_r+0x12c>
 8000d64:	06d1      	lsls	r1, r2, #27
 8000d66:	bf44      	itt	mi
 8000d68:	2320      	movmi	r3, #32
 8000d6a:	f88d 3053 	strbmi.w	r3, [sp, #83]	; 0x53
 8000d6e:	0713      	lsls	r3, r2, #28
 8000d70:	bf44      	itt	mi
 8000d72:	232b      	movmi	r3, #43	; 0x2b
 8000d74:	f88d 3053 	strbmi.w	r3, [sp, #83]	; 0x53
 8000d78:	f89a 3000 	ldrb.w	r3, [sl]
 8000d7c:	2b2a      	cmp	r3, #42	; 0x2a
 8000d7e:	d015      	beq.n	8000dac <_vfiprintf_r+0x13c>
 8000d80:	9a07      	ldr	r2, [sp, #28]
 8000d82:	4654      	mov	r4, sl
 8000d84:	2000      	movs	r0, #0
 8000d86:	f04f 0c0a 	mov.w	ip, #10
 8000d8a:	4621      	mov	r1, r4
 8000d8c:	f811 3b01 	ldrb.w	r3, [r1], #1
 8000d90:	3b30      	subs	r3, #48	; 0x30
 8000d92:	2b09      	cmp	r3, #9
 8000d94:	d94e      	bls.n	8000e34 <_vfiprintf_r+0x1c4>
 8000d96:	b1b0      	cbz	r0, 8000dc6 <_vfiprintf_r+0x156>
 8000d98:	9207      	str	r2, [sp, #28]
 8000d9a:	e014      	b.n	8000dc6 <_vfiprintf_r+0x156>
 8000d9c:	eba0 0308 	sub.w	r3, r0, r8
 8000da0:	fa09 f303 	lsl.w	r3, r9, r3
 8000da4:	4313      	orrs	r3, r2
 8000da6:	9304      	str	r3, [sp, #16]
 8000da8:	46a2      	mov	sl, r4
 8000daa:	e7d2      	b.n	8000d52 <_vfiprintf_r+0xe2>
 8000dac:	9b03      	ldr	r3, [sp, #12]
 8000dae:	1d19      	adds	r1, r3, #4
 8000db0:	681b      	ldr	r3, [r3, #0]
 8000db2:	9103      	str	r1, [sp, #12]
 8000db4:	2b00      	cmp	r3, #0
 8000db6:	bfbb      	ittet	lt
 8000db8:	425b      	neglt	r3, r3
 8000dba:	f042 0202 	orrlt.w	r2, r2, #2
 8000dbe:	9307      	strge	r3, [sp, #28]
 8000dc0:	9307      	strlt	r3, [sp, #28]
 8000dc2:	bfb8      	it	lt
 8000dc4:	9204      	strlt	r2, [sp, #16]
 8000dc6:	7823      	ldrb	r3, [r4, #0]
 8000dc8:	2b2e      	cmp	r3, #46	; 0x2e
 8000dca:	d10c      	bne.n	8000de6 <_vfiprintf_r+0x176>
 8000dcc:	7863      	ldrb	r3, [r4, #1]
 8000dce:	2b2a      	cmp	r3, #42	; 0x2a
 8000dd0:	d135      	bne.n	8000e3e <_vfiprintf_r+0x1ce>
 8000dd2:	9b03      	ldr	r3, [sp, #12]
 8000dd4:	1d1a      	adds	r2, r3, #4
 8000dd6:	681b      	ldr	r3, [r3, #0]
 8000dd8:	9203      	str	r2, [sp, #12]
 8000dda:	2b00      	cmp	r3, #0
 8000ddc:	bfb8      	it	lt
 8000dde:	f04f 33ff 	movlt.w	r3, #4294967295
 8000de2:	3402      	adds	r4, #2
 8000de4:	9305      	str	r3, [sp, #20]
 8000de6:	f8df a0e4 	ldr.w	sl, [pc, #228]	; 8000ecc <_vfiprintf_r+0x25c>
 8000dea:	7821      	ldrb	r1, [r4, #0]
 8000dec:	2203      	movs	r2, #3
 8000dee:	4650      	mov	r0, sl
 8000df0:	f7ff f9f6 	bl	80001e0 <memchr>
 8000df4:	b140      	cbz	r0, 8000e08 <_vfiprintf_r+0x198>
 8000df6:	2340      	movs	r3, #64	; 0x40
 8000df8:	eba0 000a 	sub.w	r0, r0, sl
 8000dfc:	fa03 f000 	lsl.w	r0, r3, r0
 8000e00:	9b04      	ldr	r3, [sp, #16]
 8000e02:	4303      	orrs	r3, r0
 8000e04:	3401      	adds	r4, #1
 8000e06:	9304      	str	r3, [sp, #16]
 8000e08:	f814 1b01 	ldrb.w	r1, [r4], #1
 8000e0c:	482c      	ldr	r0, [pc, #176]	; (8000ec0 <_vfiprintf_r+0x250>)
 8000e0e:	f88d 1028 	strb.w	r1, [sp, #40]	; 0x28
 8000e12:	2206      	movs	r2, #6
 8000e14:	f7ff f9e4 	bl	80001e0 <memchr>
 8000e18:	2800      	cmp	r0, #0
 8000e1a:	d03f      	beq.n	8000e9c <_vfiprintf_r+0x22c>
 8000e1c:	4b29      	ldr	r3, [pc, #164]	; (8000ec4 <_vfiprintf_r+0x254>)
 8000e1e:	bb1b      	cbnz	r3, 8000e68 <_vfiprintf_r+0x1f8>
 8000e20:	9b03      	ldr	r3, [sp, #12]
 8000e22:	3307      	adds	r3, #7
 8000e24:	f023 0307 	bic.w	r3, r3, #7
 8000e28:	3308      	adds	r3, #8
 8000e2a:	9303      	str	r3, [sp, #12]
 8000e2c:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8000e2e:	443b      	add	r3, r7
 8000e30:	9309      	str	r3, [sp, #36]	; 0x24
 8000e32:	e767      	b.n	8000d04 <_vfiprintf_r+0x94>
 8000e34:	fb0c 3202 	mla	r2, ip, r2, r3
 8000e38:	460c      	mov	r4, r1
 8000e3a:	2001      	movs	r0, #1
 8000e3c:	e7a5      	b.n	8000d8a <_vfiprintf_r+0x11a>
 8000e3e:	2300      	movs	r3, #0
 8000e40:	3401      	adds	r4, #1
 8000e42:	9305      	str	r3, [sp, #20]
 8000e44:	4619      	mov	r1, r3
 8000e46:	f04f 0c0a 	mov.w	ip, #10
 8000e4a:	4620      	mov	r0, r4
 8000e4c:	f810 2b01 	ldrb.w	r2, [r0], #1
 8000e50:	3a30      	subs	r2, #48	; 0x30
 8000e52:	2a09      	cmp	r2, #9
 8000e54:	d903      	bls.n	8000e5e <_vfiprintf_r+0x1ee>
 8000e56:	2b00      	cmp	r3, #0
 8000e58:	d0c5      	beq.n	8000de6 <_vfiprintf_r+0x176>
 8000e5a:	9105      	str	r1, [sp, #20]
 8000e5c:	e7c3      	b.n	8000de6 <_vfiprintf_r+0x176>
 8000e5e:	fb0c 2101 	mla	r1, ip, r1, r2
 8000e62:	4604      	mov	r4, r0
 8000e64:	2301      	movs	r3, #1
 8000e66:	e7f0      	b.n	8000e4a <_vfiprintf_r+0x1da>
 8000e68:	ab03      	add	r3, sp, #12
 8000e6a:	9300      	str	r3, [sp, #0]
 8000e6c:	462a      	mov	r2, r5
 8000e6e:	4b16      	ldr	r3, [pc, #88]	; (8000ec8 <_vfiprintf_r+0x258>)
 8000e70:	a904      	add	r1, sp, #16
 8000e72:	4630      	mov	r0, r6
 8000e74:	f3af 8000 	nop.w
 8000e78:	4607      	mov	r7, r0
 8000e7a:	1c78      	adds	r0, r7, #1
 8000e7c:	d1d6      	bne.n	8000e2c <_vfiprintf_r+0x1bc>
 8000e7e:	6e6b      	ldr	r3, [r5, #100]	; 0x64
 8000e80:	07d9      	lsls	r1, r3, #31
 8000e82:	d405      	bmi.n	8000e90 <_vfiprintf_r+0x220>
 8000e84:	89ab      	ldrh	r3, [r5, #12]
 8000e86:	059a      	lsls	r2, r3, #22
 8000e88:	d402      	bmi.n	8000e90 <_vfiprintf_r+0x220>
 8000e8a:	6da8      	ldr	r0, [r5, #88]	; 0x58
 8000e8c:	f7ff fddd 	bl	8000a4a <__retarget_lock_release_recursive>
 8000e90:	89ab      	ldrh	r3, [r5, #12]
 8000e92:	065b      	lsls	r3, r3, #25
 8000e94:	f53f af12 	bmi.w	8000cbc <_vfiprintf_r+0x4c>
 8000e98:	9809      	ldr	r0, [sp, #36]	; 0x24
 8000e9a:	e711      	b.n	8000cc0 <_vfiprintf_r+0x50>
 8000e9c:	ab03      	add	r3, sp, #12
 8000e9e:	9300      	str	r3, [sp, #0]
 8000ea0:	462a      	mov	r2, r5
 8000ea2:	4b09      	ldr	r3, [pc, #36]	; (8000ec8 <_vfiprintf_r+0x258>)
 8000ea4:	a904      	add	r1, sp, #16
 8000ea6:	4630      	mov	r0, r6
 8000ea8:	f000 f880 	bl	8000fac <_printf_i>
 8000eac:	e7e4      	b.n	8000e78 <_vfiprintf_r+0x208>
 8000eae:	bf00      	nop
 8000eb0:	080019c8 	.word	0x080019c8
 8000eb4:	080019e8 	.word	0x080019e8
 8000eb8:	080019a8 	.word	0x080019a8
 8000ebc:	08001a08 	.word	0x08001a08
 8000ec0:	08001a12 	.word	0x08001a12
 8000ec4:	00000000 	.word	0x00000000
 8000ec8:	08000c4b 	.word	0x08000c4b
 8000ecc:	08001a0e 	.word	0x08001a0e

08000ed0 <_printf_common>:
 8000ed0:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 8000ed4:	4616      	mov	r6, r2
 8000ed6:	4699      	mov	r9, r3
 8000ed8:	688a      	ldr	r2, [r1, #8]
 8000eda:	690b      	ldr	r3, [r1, #16]
 8000edc:	f8dd 8020 	ldr.w	r8, [sp, #32]
 8000ee0:	4293      	cmp	r3, r2
 8000ee2:	bfb8      	it	lt
 8000ee4:	4613      	movlt	r3, r2
 8000ee6:	6033      	str	r3, [r6, #0]
 8000ee8:	f891 2043 	ldrb.w	r2, [r1, #67]	; 0x43
 8000eec:	4607      	mov	r7, r0
 8000eee:	460c      	mov	r4, r1
 8000ef0:	b10a      	cbz	r2, 8000ef6 <_printf_common+0x26>
 8000ef2:	3301      	adds	r3, #1
 8000ef4:	6033      	str	r3, [r6, #0]
 8000ef6:	6823      	ldr	r3, [r4, #0]
 8000ef8:	0699      	lsls	r1, r3, #26
 8000efa:	bf42      	ittt	mi
 8000efc:	6833      	ldrmi	r3, [r6, #0]
 8000efe:	3302      	addmi	r3, #2
 8000f00:	6033      	strmi	r3, [r6, #0]
 8000f02:	6825      	ldr	r5, [r4, #0]
 8000f04:	f015 0506 	ands.w	r5, r5, #6
 8000f08:	d106      	bne.n	8000f18 <_printf_common+0x48>
 8000f0a:	f104 0a19 	add.w	sl, r4, #25
 8000f0e:	68e3      	ldr	r3, [r4, #12]
 8000f10:	6832      	ldr	r2, [r6, #0]
 8000f12:	1a9b      	subs	r3, r3, r2
 8000f14:	42ab      	cmp	r3, r5
 8000f16:	dc26      	bgt.n	8000f66 <_printf_common+0x96>
 8000f18:	f894 2043 	ldrb.w	r2, [r4, #67]	; 0x43
 8000f1c:	1e13      	subs	r3, r2, #0
 8000f1e:	6822      	ldr	r2, [r4, #0]
 8000f20:	bf18      	it	ne
 8000f22:	2301      	movne	r3, #1
 8000f24:	0692      	lsls	r2, r2, #26
 8000f26:	d42b      	bmi.n	8000f80 <_printf_common+0xb0>
 8000f28:	f104 0243 	add.w	r2, r4, #67	; 0x43
 8000f2c:	4649      	mov	r1, r9
 8000f2e:	4638      	mov	r0, r7
 8000f30:	47c0      	blx	r8
 8000f32:	3001      	adds	r0, #1
 8000f34:	d01e      	beq.n	8000f74 <_printf_common+0xa4>
 8000f36:	6823      	ldr	r3, [r4, #0]
 8000f38:	68e5      	ldr	r5, [r4, #12]
 8000f3a:	6832      	ldr	r2, [r6, #0]
 8000f3c:	f003 0306 	and.w	r3, r3, #6
 8000f40:	2b04      	cmp	r3, #4
 8000f42:	bf08      	it	eq
 8000f44:	1aad      	subeq	r5, r5, r2
 8000f46:	68a3      	ldr	r3, [r4, #8]
 8000f48:	6922      	ldr	r2, [r4, #16]
 8000f4a:	bf0c      	ite	eq
 8000f4c:	ea25 75e5 	biceq.w	r5, r5, r5, asr #31
 8000f50:	2500      	movne	r5, #0
 8000f52:	4293      	cmp	r3, r2
 8000f54:	bfc4      	itt	gt
 8000f56:	1a9b      	subgt	r3, r3, r2
 8000f58:	18ed      	addgt	r5, r5, r3
 8000f5a:	2600      	movs	r6, #0
 8000f5c:	341a      	adds	r4, #26
 8000f5e:	42b5      	cmp	r5, r6
 8000f60:	d11a      	bne.n	8000f98 <_printf_common+0xc8>
 8000f62:	2000      	movs	r0, #0
 8000f64:	e008      	b.n	8000f78 <_printf_common+0xa8>
 8000f66:	2301      	movs	r3, #1
 8000f68:	4652      	mov	r2, sl
 8000f6a:	4649      	mov	r1, r9
 8000f6c:	4638      	mov	r0, r7
 8000f6e:	47c0      	blx	r8
 8000f70:	3001      	adds	r0, #1
 8000f72:	d103      	bne.n	8000f7c <_printf_common+0xac>
 8000f74:	f04f 30ff 	mov.w	r0, #4294967295
 8000f78:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 8000f7c:	3501      	adds	r5, #1
 8000f7e:	e7c6      	b.n	8000f0e <_printf_common+0x3e>
 8000f80:	18e1      	adds	r1, r4, r3
 8000f82:	1c5a      	adds	r2, r3, #1
 8000f84:	2030      	movs	r0, #48	; 0x30
 8000f86:	f881 0043 	strb.w	r0, [r1, #67]	; 0x43
 8000f8a:	4422      	add	r2, r4
 8000f8c:	f894 1045 	ldrb.w	r1, [r4, #69]	; 0x45
 8000f90:	f882 1043 	strb.w	r1, [r2, #67]	; 0x43
 8000f94:	3302      	adds	r3, #2
 8000f96:	e7c7      	b.n	8000f28 <_printf_common+0x58>
 8000f98:	2301      	movs	r3, #1
 8000f9a:	4622      	mov	r2, r4
 8000f9c:	4649      	mov	r1, r9
 8000f9e:	4638      	mov	r0, r7
 8000fa0:	47c0      	blx	r8
 8000fa2:	3001      	adds	r0, #1
 8000fa4:	d0e6      	beq.n	8000f74 <_printf_common+0xa4>
 8000fa6:	3601      	adds	r6, #1
 8000fa8:	e7d9      	b.n	8000f5e <_printf_common+0x8e>
	...

08000fac <_printf_i>:
 8000fac:	e92d 47ff 	stmdb	sp!, {r0, r1, r2, r3, r4, r5, r6, r7, r8, r9, sl, lr}
 8000fb0:	7e0f      	ldrb	r7, [r1, #24]
 8000fb2:	9d0c      	ldr	r5, [sp, #48]	; 0x30
 8000fb4:	2f78      	cmp	r7, #120	; 0x78
 8000fb6:	4691      	mov	r9, r2
 8000fb8:	4680      	mov	r8, r0
 8000fba:	460c      	mov	r4, r1
 8000fbc:	469a      	mov	sl, r3
 8000fbe:	f101 0243 	add.w	r2, r1, #67	; 0x43
 8000fc2:	d807      	bhi.n	8000fd4 <_printf_i+0x28>
 8000fc4:	2f62      	cmp	r7, #98	; 0x62
 8000fc6:	d80a      	bhi.n	8000fde <_printf_i+0x32>
 8000fc8:	2f00      	cmp	r7, #0
 8000fca:	f000 80d8 	beq.w	800117e <_printf_i+0x1d2>
 8000fce:	2f58      	cmp	r7, #88	; 0x58
 8000fd0:	f000 80a3 	beq.w	800111a <_printf_i+0x16e>
 8000fd4:	f104 0542 	add.w	r5, r4, #66	; 0x42
 8000fd8:	f884 7042 	strb.w	r7, [r4, #66]	; 0x42
 8000fdc:	e03a      	b.n	8001054 <_printf_i+0xa8>
 8000fde:	f1a7 0363 	sub.w	r3, r7, #99	; 0x63
 8000fe2:	2b15      	cmp	r3, #21
 8000fe4:	d8f6      	bhi.n	8000fd4 <_printf_i+0x28>
 8000fe6:	a101      	add	r1, pc, #4	; (adr r1, 8000fec <_printf_i+0x40>)
 8000fe8:	f851 f023 	ldr.w	pc, [r1, r3, lsl #2]
 8000fec:	08001045 	.word	0x08001045
 8000ff0:	08001059 	.word	0x08001059
 8000ff4:	08000fd5 	.word	0x08000fd5
 8000ff8:	08000fd5 	.word	0x08000fd5
 8000ffc:	08000fd5 	.word	0x08000fd5
 8001000:	08000fd5 	.word	0x08000fd5
 8001004:	08001059 	.word	0x08001059
 8001008:	08000fd5 	.word	0x08000fd5
 800100c:	08000fd5 	.word	0x08000fd5
 8001010:	08000fd5 	.word	0x08000fd5
 8001014:	08000fd5 	.word	0x08000fd5
 8001018:	08001165 	.word	0x08001165
 800101c:	08001089 	.word	0x08001089
 8001020:	08001147 	.word	0x08001147
 8001024:	08000fd5 	.word	0x08000fd5
 8001028:	08000fd5 	.word	0x08000fd5
 800102c:	08001187 	.word	0x08001187
 8001030:	08000fd5 	.word	0x08000fd5
 8001034:	08001089 	.word	0x08001089
 8001038:	08000fd5 	.word	0x08000fd5
 800103c:	08000fd5 	.word	0x08000fd5
 8001040:	0800114f 	.word	0x0800114f
 8001044:	682b      	ldr	r3, [r5, #0]
 8001046:	1d1a      	adds	r2, r3, #4
 8001048:	681b      	ldr	r3, [r3, #0]
 800104a:	602a      	str	r2, [r5, #0]
 800104c:	f104 0542 	add.w	r5, r4, #66	; 0x42
 8001050:	f884 3042 	strb.w	r3, [r4, #66]	; 0x42
 8001054:	2301      	movs	r3, #1
 8001056:	e0a3      	b.n	80011a0 <_printf_i+0x1f4>
 8001058:	6820      	ldr	r0, [r4, #0]
 800105a:	6829      	ldr	r1, [r5, #0]
 800105c:	0606      	lsls	r6, r0, #24
 800105e:	f101 0304 	add.w	r3, r1, #4
 8001062:	d50a      	bpl.n	800107a <_printf_i+0xce>
 8001064:	680e      	ldr	r6, [r1, #0]
 8001066:	602b      	str	r3, [r5, #0]
 8001068:	2e00      	cmp	r6, #0
 800106a:	da03      	bge.n	8001074 <_printf_i+0xc8>
 800106c:	232d      	movs	r3, #45	; 0x2d
 800106e:	4276      	negs	r6, r6
 8001070:	f884 3043 	strb.w	r3, [r4, #67]	; 0x43
 8001074:	485e      	ldr	r0, [pc, #376]	; (80011f0 <_printf_i+0x244>)
 8001076:	230a      	movs	r3, #10
 8001078:	e019      	b.n	80010ae <_printf_i+0x102>
 800107a:	680e      	ldr	r6, [r1, #0]
 800107c:	602b      	str	r3, [r5, #0]
 800107e:	f010 0f40 	tst.w	r0, #64	; 0x40
 8001082:	bf18      	it	ne
 8001084:	b236      	sxthne	r6, r6
 8001086:	e7ef      	b.n	8001068 <_printf_i+0xbc>
 8001088:	682b      	ldr	r3, [r5, #0]
 800108a:	6820      	ldr	r0, [r4, #0]
 800108c:	1d19      	adds	r1, r3, #4
 800108e:	6029      	str	r1, [r5, #0]
 8001090:	0601      	lsls	r1, r0, #24
 8001092:	d501      	bpl.n	8001098 <_printf_i+0xec>
 8001094:	681e      	ldr	r6, [r3, #0]
 8001096:	e002      	b.n	800109e <_printf_i+0xf2>
 8001098:	0646      	lsls	r6, r0, #25
 800109a:	d5fb      	bpl.n	8001094 <_printf_i+0xe8>
 800109c:	881e      	ldrh	r6, [r3, #0]
 800109e:	4854      	ldr	r0, [pc, #336]	; (80011f0 <_printf_i+0x244>)
 80010a0:	2f6f      	cmp	r7, #111	; 0x6f
 80010a2:	bf0c      	ite	eq
 80010a4:	2308      	moveq	r3, #8
 80010a6:	230a      	movne	r3, #10
 80010a8:	2100      	movs	r1, #0
 80010aa:	f884 1043 	strb.w	r1, [r4, #67]	; 0x43
 80010ae:	6865      	ldr	r5, [r4, #4]
 80010b0:	60a5      	str	r5, [r4, #8]
 80010b2:	2d00      	cmp	r5, #0
 80010b4:	bfa2      	ittt	ge
 80010b6:	6821      	ldrge	r1, [r4, #0]
 80010b8:	f021 0104 	bicge.w	r1, r1, #4
 80010bc:	6021      	strge	r1, [r4, #0]
 80010be:	b90e      	cbnz	r6, 80010c4 <_printf_i+0x118>
 80010c0:	2d00      	cmp	r5, #0
 80010c2:	d04d      	beq.n	8001160 <_printf_i+0x1b4>
 80010c4:	4615      	mov	r5, r2
 80010c6:	fbb6 f1f3 	udiv	r1, r6, r3
 80010ca:	fb03 6711 	mls	r7, r3, r1, r6
 80010ce:	5dc7      	ldrb	r7, [r0, r7]
 80010d0:	f805 7d01 	strb.w	r7, [r5, #-1]!
 80010d4:	4637      	mov	r7, r6
 80010d6:	42bb      	cmp	r3, r7
 80010d8:	460e      	mov	r6, r1
 80010da:	d9f4      	bls.n	80010c6 <_printf_i+0x11a>
 80010dc:	2b08      	cmp	r3, #8
 80010de:	d10b      	bne.n	80010f8 <_printf_i+0x14c>
 80010e0:	6823      	ldr	r3, [r4, #0]
 80010e2:	07de      	lsls	r6, r3, #31
 80010e4:	d508      	bpl.n	80010f8 <_printf_i+0x14c>
 80010e6:	6923      	ldr	r3, [r4, #16]
 80010e8:	6861      	ldr	r1, [r4, #4]
 80010ea:	4299      	cmp	r1, r3
 80010ec:	bfde      	ittt	le
 80010ee:	2330      	movle	r3, #48	; 0x30
 80010f0:	f805 3c01 	strble.w	r3, [r5, #-1]
 80010f4:	f105 35ff 	addle.w	r5, r5, #4294967295
 80010f8:	1b52      	subs	r2, r2, r5
 80010fa:	6122      	str	r2, [r4, #16]
 80010fc:	f8cd a000 	str.w	sl, [sp]
 8001100:	464b      	mov	r3, r9
 8001102:	aa03      	add	r2, sp, #12
 8001104:	4621      	mov	r1, r4
 8001106:	4640      	mov	r0, r8
 8001108:	f7ff fee2 	bl	8000ed0 <_printf_common>
 800110c:	3001      	adds	r0, #1
 800110e:	d14c      	bne.n	80011aa <_printf_i+0x1fe>
 8001110:	f04f 30ff 	mov.w	r0, #4294967295
 8001114:	b004      	add	sp, #16
 8001116:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 800111a:	4835      	ldr	r0, [pc, #212]	; (80011f0 <_printf_i+0x244>)
 800111c:	f881 7045 	strb.w	r7, [r1, #69]	; 0x45
 8001120:	6829      	ldr	r1, [r5, #0]
 8001122:	6823      	ldr	r3, [r4, #0]
 8001124:	f851 6b04 	ldr.w	r6, [r1], #4
 8001128:	6029      	str	r1, [r5, #0]
 800112a:	061d      	lsls	r5, r3, #24
 800112c:	d514      	bpl.n	8001158 <_printf_i+0x1ac>
 800112e:	07df      	lsls	r7, r3, #31
 8001130:	bf44      	itt	mi
 8001132:	f043 0320 	orrmi.w	r3, r3, #32
 8001136:	6023      	strmi	r3, [r4, #0]
 8001138:	b91e      	cbnz	r6, 8001142 <_printf_i+0x196>
 800113a:	6823      	ldr	r3, [r4, #0]
 800113c:	f023 0320 	bic.w	r3, r3, #32
 8001140:	6023      	str	r3, [r4, #0]
 8001142:	2310      	movs	r3, #16
 8001144:	e7b0      	b.n	80010a8 <_printf_i+0xfc>
 8001146:	6823      	ldr	r3, [r4, #0]
 8001148:	f043 0320 	orr.w	r3, r3, #32
 800114c:	6023      	str	r3, [r4, #0]
 800114e:	2378      	movs	r3, #120	; 0x78
 8001150:	4828      	ldr	r0, [pc, #160]	; (80011f4 <_printf_i+0x248>)
 8001152:	f884 3045 	strb.w	r3, [r4, #69]	; 0x45
 8001156:	e7e3      	b.n	8001120 <_printf_i+0x174>
 8001158:	0659      	lsls	r1, r3, #25
 800115a:	bf48      	it	mi
 800115c:	b2b6      	uxthmi	r6, r6
 800115e:	e7e6      	b.n	800112e <_printf_i+0x182>
 8001160:	4615      	mov	r5, r2
 8001162:	e7bb      	b.n	80010dc <_printf_i+0x130>
 8001164:	682b      	ldr	r3, [r5, #0]
 8001166:	6826      	ldr	r6, [r4, #0]
 8001168:	6961      	ldr	r1, [r4, #20]
 800116a:	1d18      	adds	r0, r3, #4
 800116c:	6028      	str	r0, [r5, #0]
 800116e:	0635      	lsls	r5, r6, #24
 8001170:	681b      	ldr	r3, [r3, #0]
 8001172:	d501      	bpl.n	8001178 <_printf_i+0x1cc>
 8001174:	6019      	str	r1, [r3, #0]
 8001176:	e002      	b.n	800117e <_printf_i+0x1d2>
 8001178:	0670      	lsls	r0, r6, #25
 800117a:	d5fb      	bpl.n	8001174 <_printf_i+0x1c8>
 800117c:	8019      	strh	r1, [r3, #0]
 800117e:	2300      	movs	r3, #0
 8001180:	6123      	str	r3, [r4, #16]
 8001182:	4615      	mov	r5, r2
 8001184:	e7ba      	b.n	80010fc <_printf_i+0x150>
 8001186:	682b      	ldr	r3, [r5, #0]
 8001188:	1d1a      	adds	r2, r3, #4
 800118a:	602a      	str	r2, [r5, #0]
 800118c:	681d      	ldr	r5, [r3, #0]
 800118e:	6862      	ldr	r2, [r4, #4]
 8001190:	2100      	movs	r1, #0
 8001192:	4628      	mov	r0, r5
 8001194:	f7ff f824 	bl	80001e0 <memchr>
 8001198:	b108      	cbz	r0, 800119e <_printf_i+0x1f2>
 800119a:	1b40      	subs	r0, r0, r5
 800119c:	6060      	str	r0, [r4, #4]
 800119e:	6863      	ldr	r3, [r4, #4]
 80011a0:	6123      	str	r3, [r4, #16]
 80011a2:	2300      	movs	r3, #0
 80011a4:	f884 3043 	strb.w	r3, [r4, #67]	; 0x43
 80011a8:	e7a8      	b.n	80010fc <_printf_i+0x150>
 80011aa:	6923      	ldr	r3, [r4, #16]
 80011ac:	462a      	mov	r2, r5
 80011ae:	4649      	mov	r1, r9
 80011b0:	4640      	mov	r0, r8
 80011b2:	47d0      	blx	sl
 80011b4:	3001      	adds	r0, #1
 80011b6:	d0ab      	beq.n	8001110 <_printf_i+0x164>
 80011b8:	6823      	ldr	r3, [r4, #0]
 80011ba:	079b      	lsls	r3, r3, #30
 80011bc:	d413      	bmi.n	80011e6 <_printf_i+0x23a>
 80011be:	68e0      	ldr	r0, [r4, #12]
 80011c0:	9b03      	ldr	r3, [sp, #12]
 80011c2:	4298      	cmp	r0, r3
 80011c4:	bfb8      	it	lt
 80011c6:	4618      	movlt	r0, r3
 80011c8:	e7a4      	b.n	8001114 <_printf_i+0x168>
 80011ca:	2301      	movs	r3, #1
 80011cc:	4632      	mov	r2, r6
 80011ce:	4649      	mov	r1, r9
 80011d0:	4640      	mov	r0, r8
 80011d2:	47d0      	blx	sl
 80011d4:	3001      	adds	r0, #1
 80011d6:	d09b      	beq.n	8001110 <_printf_i+0x164>
 80011d8:	3501      	adds	r5, #1
 80011da:	68e3      	ldr	r3, [r4, #12]
 80011dc:	9903      	ldr	r1, [sp, #12]
 80011de:	1a5b      	subs	r3, r3, r1
 80011e0:	42ab      	cmp	r3, r5
 80011e2:	dcf2      	bgt.n	80011ca <_printf_i+0x21e>
 80011e4:	e7eb      	b.n	80011be <_printf_i+0x212>
 80011e6:	2500      	movs	r5, #0
 80011e8:	f104 0619 	add.w	r6, r4, #25
 80011ec:	e7f5      	b.n	80011da <_printf_i+0x22e>
 80011ee:	bf00      	nop
 80011f0:	08001a19 	.word	0x08001a19
 80011f4:	08001a2a 	.word	0x08001a2a

080011f8 <_putc_r>:
 80011f8:	b570      	push	{r4, r5, r6, lr}
 80011fa:	460d      	mov	r5, r1
 80011fc:	4614      	mov	r4, r2
 80011fe:	4606      	mov	r6, r0
 8001200:	b118      	cbz	r0, 800120a <_putc_r+0x12>
 8001202:	6983      	ldr	r3, [r0, #24]
 8001204:	b90b      	cbnz	r3, 800120a <_putc_r+0x12>
 8001206:	f7ff fb6f 	bl	80008e8 <__sinit>
 800120a:	4b1c      	ldr	r3, [pc, #112]	; (800127c <_putc_r+0x84>)
 800120c:	429c      	cmp	r4, r3
 800120e:	d124      	bne.n	800125a <_putc_r+0x62>
 8001210:	6874      	ldr	r4, [r6, #4]
 8001212:	6e63      	ldr	r3, [r4, #100]	; 0x64
 8001214:	07d8      	lsls	r0, r3, #31
 8001216:	d405      	bmi.n	8001224 <_putc_r+0x2c>
 8001218:	89a3      	ldrh	r3, [r4, #12]
 800121a:	0599      	lsls	r1, r3, #22
 800121c:	d402      	bmi.n	8001224 <_putc_r+0x2c>
 800121e:	6da0      	ldr	r0, [r4, #88]	; 0x58
 8001220:	f7ff fc12 	bl	8000a48 <__retarget_lock_acquire_recursive>
 8001224:	68a3      	ldr	r3, [r4, #8]
 8001226:	3b01      	subs	r3, #1
 8001228:	2b00      	cmp	r3, #0
 800122a:	60a3      	str	r3, [r4, #8]
 800122c:	da05      	bge.n	800123a <_putc_r+0x42>
 800122e:	69a2      	ldr	r2, [r4, #24]
 8001230:	4293      	cmp	r3, r2
 8001232:	db1c      	blt.n	800126e <_putc_r+0x76>
 8001234:	b2eb      	uxtb	r3, r5
 8001236:	2b0a      	cmp	r3, #10
 8001238:	d019      	beq.n	800126e <_putc_r+0x76>
 800123a:	6823      	ldr	r3, [r4, #0]
 800123c:	1c5a      	adds	r2, r3, #1
 800123e:	6022      	str	r2, [r4, #0]
 8001240:	701d      	strb	r5, [r3, #0]
 8001242:	b2ed      	uxtb	r5, r5
 8001244:	6e63      	ldr	r3, [r4, #100]	; 0x64
 8001246:	07da      	lsls	r2, r3, #31
 8001248:	d405      	bmi.n	8001256 <_putc_r+0x5e>
 800124a:	89a3      	ldrh	r3, [r4, #12]
 800124c:	059b      	lsls	r3, r3, #22
 800124e:	d402      	bmi.n	8001256 <_putc_r+0x5e>
 8001250:	6da0      	ldr	r0, [r4, #88]	; 0x58
 8001252:	f7ff fbfa 	bl	8000a4a <__retarget_lock_release_recursive>
 8001256:	4628      	mov	r0, r5
 8001258:	bd70      	pop	{r4, r5, r6, pc}
 800125a:	4b09      	ldr	r3, [pc, #36]	; (8001280 <_putc_r+0x88>)
 800125c:	429c      	cmp	r4, r3
 800125e:	d101      	bne.n	8001264 <_putc_r+0x6c>
 8001260:	68b4      	ldr	r4, [r6, #8]
 8001262:	e7d6      	b.n	8001212 <_putc_r+0x1a>
 8001264:	4b07      	ldr	r3, [pc, #28]	; (8001284 <_putc_r+0x8c>)
 8001266:	429c      	cmp	r4, r3
 8001268:	bf08      	it	eq
 800126a:	68f4      	ldreq	r4, [r6, #12]
 800126c:	e7d1      	b.n	8001212 <_putc_r+0x1a>
 800126e:	4629      	mov	r1, r5
 8001270:	4622      	mov	r2, r4
 8001272:	4630      	mov	r0, r6
 8001274:	f000 f85c 	bl	8001330 <__swbuf_r>
 8001278:	4605      	mov	r5, r0
 800127a:	e7e3      	b.n	8001244 <_putc_r+0x4c>
 800127c:	080019c8 	.word	0x080019c8
 8001280:	080019e8 	.word	0x080019e8
 8001284:	080019a8 	.word	0x080019a8

08001288 <_sbrk_r>:
 8001288:	b538      	push	{r3, r4, r5, lr}
 800128a:	4d06      	ldr	r5, [pc, #24]	; (80012a4 <_sbrk_r+0x1c>)
 800128c:	2300      	movs	r3, #0
 800128e:	4604      	mov	r4, r0
 8001290:	4608      	mov	r0, r1
 8001292:	602b      	str	r3, [r5, #0]
 8001294:	f7ff f9b4 	bl	8000600 <_sbrk>
 8001298:	1c43      	adds	r3, r0, #1
 800129a:	d102      	bne.n	80012a2 <_sbrk_r+0x1a>
 800129c:	682b      	ldr	r3, [r5, #0]
 800129e:	b103      	cbz	r3, 80012a2 <_sbrk_r+0x1a>
 80012a0:	6023      	str	r3, [r4, #0]
 80012a2:	bd38      	pop	{r3, r4, r5, pc}
 80012a4:	200000d8 	.word	0x200000d8

080012a8 <__sread>:
 80012a8:	b510      	push	{r4, lr}
 80012aa:	460c      	mov	r4, r1
 80012ac:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 80012b0:	f000 fa6e 	bl	8001790 <_read_r>
 80012b4:	2800      	cmp	r0, #0
 80012b6:	bfab      	itete	ge
 80012b8:	6d63      	ldrge	r3, [r4, #84]	; 0x54
 80012ba:	89a3      	ldrhlt	r3, [r4, #12]
 80012bc:	181b      	addge	r3, r3, r0
 80012be:	f423 5380 	biclt.w	r3, r3, #4096	; 0x1000
 80012c2:	bfac      	ite	ge
 80012c4:	6563      	strge	r3, [r4, #84]	; 0x54
 80012c6:	81a3      	strhlt	r3, [r4, #12]
 80012c8:	bd10      	pop	{r4, pc}

080012ca <__swrite>:
 80012ca:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 80012ce:	461f      	mov	r7, r3
 80012d0:	898b      	ldrh	r3, [r1, #12]
 80012d2:	05db      	lsls	r3, r3, #23
 80012d4:	4605      	mov	r5, r0
 80012d6:	460c      	mov	r4, r1
 80012d8:	4616      	mov	r6, r2
 80012da:	d505      	bpl.n	80012e8 <__swrite+0x1e>
 80012dc:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 80012e0:	2302      	movs	r3, #2
 80012e2:	2200      	movs	r2, #0
 80012e4:	f000 f9d0 	bl	8001688 <_lseek_r>
 80012e8:	89a3      	ldrh	r3, [r4, #12]
 80012ea:	f9b4 100e 	ldrsh.w	r1, [r4, #14]
 80012ee:	f423 5380 	bic.w	r3, r3, #4096	; 0x1000
 80012f2:	81a3      	strh	r3, [r4, #12]
 80012f4:	4632      	mov	r2, r6
 80012f6:	463b      	mov	r3, r7
 80012f8:	4628      	mov	r0, r5
 80012fa:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
 80012fe:	f000 b869 	b.w	80013d4 <_write_r>

08001302 <__sseek>:
 8001302:	b510      	push	{r4, lr}
 8001304:	460c      	mov	r4, r1
 8001306:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 800130a:	f000 f9bd 	bl	8001688 <_lseek_r>
 800130e:	1c43      	adds	r3, r0, #1
 8001310:	89a3      	ldrh	r3, [r4, #12]
 8001312:	bf15      	itete	ne
 8001314:	6560      	strne	r0, [r4, #84]	; 0x54
 8001316:	f423 5380 	biceq.w	r3, r3, #4096	; 0x1000
 800131a:	f443 5380 	orrne.w	r3, r3, #4096	; 0x1000
 800131e:	81a3      	strheq	r3, [r4, #12]
 8001320:	bf18      	it	ne
 8001322:	81a3      	strhne	r3, [r4, #12]
 8001324:	bd10      	pop	{r4, pc}

08001326 <__sclose>:
 8001326:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 800132a:	f000 b8db 	b.w	80014e4 <_close_r>
	...

08001330 <__swbuf_r>:
 8001330:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8001332:	460e      	mov	r6, r1
 8001334:	4614      	mov	r4, r2
 8001336:	4605      	mov	r5, r0
 8001338:	b118      	cbz	r0, 8001342 <__swbuf_r+0x12>
 800133a:	6983      	ldr	r3, [r0, #24]
 800133c:	b90b      	cbnz	r3, 8001342 <__swbuf_r+0x12>
 800133e:	f7ff fad3 	bl	80008e8 <__sinit>
 8001342:	4b21      	ldr	r3, [pc, #132]	; (80013c8 <__swbuf_r+0x98>)
 8001344:	429c      	cmp	r4, r3
 8001346:	d12b      	bne.n	80013a0 <__swbuf_r+0x70>
 8001348:	686c      	ldr	r4, [r5, #4]
 800134a:	69a3      	ldr	r3, [r4, #24]
 800134c:	60a3      	str	r3, [r4, #8]
 800134e:	89a3      	ldrh	r3, [r4, #12]
 8001350:	071a      	lsls	r2, r3, #28
 8001352:	d52f      	bpl.n	80013b4 <__swbuf_r+0x84>
 8001354:	6923      	ldr	r3, [r4, #16]
 8001356:	b36b      	cbz	r3, 80013b4 <__swbuf_r+0x84>
 8001358:	6923      	ldr	r3, [r4, #16]
 800135a:	6820      	ldr	r0, [r4, #0]
 800135c:	1ac0      	subs	r0, r0, r3
 800135e:	6963      	ldr	r3, [r4, #20]
 8001360:	b2f6      	uxtb	r6, r6
 8001362:	4283      	cmp	r3, r0
 8001364:	4637      	mov	r7, r6
 8001366:	dc04      	bgt.n	8001372 <__swbuf_r+0x42>
 8001368:	4621      	mov	r1, r4
 800136a:	4628      	mov	r0, r5
 800136c:	f000 f950 	bl	8001610 <_fflush_r>
 8001370:	bb30      	cbnz	r0, 80013c0 <__swbuf_r+0x90>
 8001372:	68a3      	ldr	r3, [r4, #8]
 8001374:	3b01      	subs	r3, #1
 8001376:	60a3      	str	r3, [r4, #8]
 8001378:	6823      	ldr	r3, [r4, #0]
 800137a:	1c5a      	adds	r2, r3, #1
 800137c:	6022      	str	r2, [r4, #0]
 800137e:	701e      	strb	r6, [r3, #0]
 8001380:	6963      	ldr	r3, [r4, #20]
 8001382:	3001      	adds	r0, #1
 8001384:	4283      	cmp	r3, r0
 8001386:	d004      	beq.n	8001392 <__swbuf_r+0x62>
 8001388:	89a3      	ldrh	r3, [r4, #12]
 800138a:	07db      	lsls	r3, r3, #31
 800138c:	d506      	bpl.n	800139c <__swbuf_r+0x6c>
 800138e:	2e0a      	cmp	r6, #10
 8001390:	d104      	bne.n	800139c <__swbuf_r+0x6c>
 8001392:	4621      	mov	r1, r4
 8001394:	4628      	mov	r0, r5
 8001396:	f000 f93b 	bl	8001610 <_fflush_r>
 800139a:	b988      	cbnz	r0, 80013c0 <__swbuf_r+0x90>
 800139c:	4638      	mov	r0, r7
 800139e:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 80013a0:	4b0a      	ldr	r3, [pc, #40]	; (80013cc <__swbuf_r+0x9c>)
 80013a2:	429c      	cmp	r4, r3
 80013a4:	d101      	bne.n	80013aa <__swbuf_r+0x7a>
 80013a6:	68ac      	ldr	r4, [r5, #8]
 80013a8:	e7cf      	b.n	800134a <__swbuf_r+0x1a>
 80013aa:	4b09      	ldr	r3, [pc, #36]	; (80013d0 <__swbuf_r+0xa0>)
 80013ac:	429c      	cmp	r4, r3
 80013ae:	bf08      	it	eq
 80013b0:	68ec      	ldreq	r4, [r5, #12]
 80013b2:	e7ca      	b.n	800134a <__swbuf_r+0x1a>
 80013b4:	4621      	mov	r1, r4
 80013b6:	4628      	mov	r0, r5
 80013b8:	f000 f81e 	bl	80013f8 <__swsetup_r>
 80013bc:	2800      	cmp	r0, #0
 80013be:	d0cb      	beq.n	8001358 <__swbuf_r+0x28>
 80013c0:	f04f 37ff 	mov.w	r7, #4294967295
 80013c4:	e7ea      	b.n	800139c <__swbuf_r+0x6c>
 80013c6:	bf00      	nop
 80013c8:	080019c8 	.word	0x080019c8
 80013cc:	080019e8 	.word	0x080019e8
 80013d0:	080019a8 	.word	0x080019a8

080013d4 <_write_r>:
 80013d4:	b538      	push	{r3, r4, r5, lr}
 80013d6:	4d07      	ldr	r5, [pc, #28]	; (80013f4 <_write_r+0x20>)
 80013d8:	4604      	mov	r4, r0
 80013da:	4608      	mov	r0, r1
 80013dc:	4611      	mov	r1, r2
 80013de:	2200      	movs	r2, #0
 80013e0:	602a      	str	r2, [r5, #0]
 80013e2:	461a      	mov	r2, r3
 80013e4:	f7ff f8bc 	bl	8000560 <_write>
 80013e8:	1c43      	adds	r3, r0, #1
 80013ea:	d102      	bne.n	80013f2 <_write_r+0x1e>
 80013ec:	682b      	ldr	r3, [r5, #0]
 80013ee:	b103      	cbz	r3, 80013f2 <_write_r+0x1e>
 80013f0:	6023      	str	r3, [r4, #0]
 80013f2:	bd38      	pop	{r3, r4, r5, pc}
 80013f4:	200000d8 	.word	0x200000d8

080013f8 <__swsetup_r>:
 80013f8:	4b32      	ldr	r3, [pc, #200]	; (80014c4 <__swsetup_r+0xcc>)
 80013fa:	b570      	push	{r4, r5, r6, lr}
 80013fc:	681d      	ldr	r5, [r3, #0]
 80013fe:	4606      	mov	r6, r0
 8001400:	460c      	mov	r4, r1
 8001402:	b125      	cbz	r5, 800140e <__swsetup_r+0x16>
 8001404:	69ab      	ldr	r3, [r5, #24]
 8001406:	b913      	cbnz	r3, 800140e <__swsetup_r+0x16>
 8001408:	4628      	mov	r0, r5
 800140a:	f7ff fa6d 	bl	80008e8 <__sinit>
 800140e:	4b2e      	ldr	r3, [pc, #184]	; (80014c8 <__swsetup_r+0xd0>)
 8001410:	429c      	cmp	r4, r3
 8001412:	d10f      	bne.n	8001434 <__swsetup_r+0x3c>
 8001414:	686c      	ldr	r4, [r5, #4]
 8001416:	89a3      	ldrh	r3, [r4, #12]
 8001418:	f9b4 200c 	ldrsh.w	r2, [r4, #12]
 800141c:	0719      	lsls	r1, r3, #28
 800141e:	d42c      	bmi.n	800147a <__swsetup_r+0x82>
 8001420:	06dd      	lsls	r5, r3, #27
 8001422:	d411      	bmi.n	8001448 <__swsetup_r+0x50>
 8001424:	2309      	movs	r3, #9
 8001426:	6033      	str	r3, [r6, #0]
 8001428:	f042 0340 	orr.w	r3, r2, #64	; 0x40
 800142c:	81a3      	strh	r3, [r4, #12]
 800142e:	f04f 30ff 	mov.w	r0, #4294967295
 8001432:	e03e      	b.n	80014b2 <__swsetup_r+0xba>
 8001434:	4b25      	ldr	r3, [pc, #148]	; (80014cc <__swsetup_r+0xd4>)
 8001436:	429c      	cmp	r4, r3
 8001438:	d101      	bne.n	800143e <__swsetup_r+0x46>
 800143a:	68ac      	ldr	r4, [r5, #8]
 800143c:	e7eb      	b.n	8001416 <__swsetup_r+0x1e>
 800143e:	4b24      	ldr	r3, [pc, #144]	; (80014d0 <__swsetup_r+0xd8>)
 8001440:	429c      	cmp	r4, r3
 8001442:	bf08      	it	eq
 8001444:	68ec      	ldreq	r4, [r5, #12]
 8001446:	e7e6      	b.n	8001416 <__swsetup_r+0x1e>
 8001448:	0758      	lsls	r0, r3, #29
 800144a:	d512      	bpl.n	8001472 <__swsetup_r+0x7a>
 800144c:	6b61      	ldr	r1, [r4, #52]	; 0x34
 800144e:	b141      	cbz	r1, 8001462 <__swsetup_r+0x6a>
 8001450:	f104 0344 	add.w	r3, r4, #68	; 0x44
 8001454:	4299      	cmp	r1, r3
 8001456:	d002      	beq.n	800145e <__swsetup_r+0x66>
 8001458:	4630      	mov	r0, r6
 800145a:	f7ff faff 	bl	8000a5c <_free_r>
 800145e:	2300      	movs	r3, #0
 8001460:	6363      	str	r3, [r4, #52]	; 0x34
 8001462:	89a3      	ldrh	r3, [r4, #12]
 8001464:	f023 0324 	bic.w	r3, r3, #36	; 0x24
 8001468:	81a3      	strh	r3, [r4, #12]
 800146a:	2300      	movs	r3, #0
 800146c:	6063      	str	r3, [r4, #4]
 800146e:	6923      	ldr	r3, [r4, #16]
 8001470:	6023      	str	r3, [r4, #0]
 8001472:	89a3      	ldrh	r3, [r4, #12]
 8001474:	f043 0308 	orr.w	r3, r3, #8
 8001478:	81a3      	strh	r3, [r4, #12]
 800147a:	6923      	ldr	r3, [r4, #16]
 800147c:	b94b      	cbnz	r3, 8001492 <__swsetup_r+0x9a>
 800147e:	89a3      	ldrh	r3, [r4, #12]
 8001480:	f403 7320 	and.w	r3, r3, #640	; 0x280
 8001484:	f5b3 7f00 	cmp.w	r3, #512	; 0x200
 8001488:	d003      	beq.n	8001492 <__swsetup_r+0x9a>
 800148a:	4621      	mov	r1, r4
 800148c:	4630      	mov	r0, r6
 800148e:	f000 f933 	bl	80016f8 <__smakebuf_r>
 8001492:	89a0      	ldrh	r0, [r4, #12]
 8001494:	f9b4 200c 	ldrsh.w	r2, [r4, #12]
 8001498:	f010 0301 	ands.w	r3, r0, #1
 800149c:	d00a      	beq.n	80014b4 <__swsetup_r+0xbc>
 800149e:	2300      	movs	r3, #0
 80014a0:	60a3      	str	r3, [r4, #8]
 80014a2:	6963      	ldr	r3, [r4, #20]
 80014a4:	425b      	negs	r3, r3
 80014a6:	61a3      	str	r3, [r4, #24]
 80014a8:	6923      	ldr	r3, [r4, #16]
 80014aa:	b943      	cbnz	r3, 80014be <__swsetup_r+0xc6>
 80014ac:	f010 0080 	ands.w	r0, r0, #128	; 0x80
 80014b0:	d1ba      	bne.n	8001428 <__swsetup_r+0x30>
 80014b2:	bd70      	pop	{r4, r5, r6, pc}
 80014b4:	0781      	lsls	r1, r0, #30
 80014b6:	bf58      	it	pl
 80014b8:	6963      	ldrpl	r3, [r4, #20]
 80014ba:	60a3      	str	r3, [r4, #8]
 80014bc:	e7f4      	b.n	80014a8 <__swsetup_r+0xb0>
 80014be:	2000      	movs	r0, #0
 80014c0:	e7f7      	b.n	80014b2 <__swsetup_r+0xba>
 80014c2:	bf00      	nop
 80014c4:	20000048 	.word	0x20000048
 80014c8:	080019c8 	.word	0x080019c8
 80014cc:	080019e8 	.word	0x080019e8
 80014d0:	080019a8 	.word	0x080019a8

080014d4 <abort>:
 80014d4:	b508      	push	{r3, lr}
 80014d6:	2006      	movs	r0, #6
 80014d8:	f000 f994 	bl	8001804 <raise>
 80014dc:	2001      	movs	r0, #1
 80014de:	f7ff f818 	bl	8000512 <_exit>
	...

080014e4 <_close_r>:
 80014e4:	b538      	push	{r3, r4, r5, lr}
 80014e6:	4d06      	ldr	r5, [pc, #24]	; (8001500 <_close_r+0x1c>)
 80014e8:	2300      	movs	r3, #0
 80014ea:	4604      	mov	r4, r0
 80014ec:	4608      	mov	r0, r1
 80014ee:	602b      	str	r3, [r5, #0]
 80014f0:	f7ff f852 	bl	8000598 <_close>
 80014f4:	1c43      	adds	r3, r0, #1
 80014f6:	d102      	bne.n	80014fe <_close_r+0x1a>
 80014f8:	682b      	ldr	r3, [r5, #0]
 80014fa:	b103      	cbz	r3, 80014fe <_close_r+0x1a>
 80014fc:	6023      	str	r3, [r4, #0]
 80014fe:	bd38      	pop	{r3, r4, r5, pc}
 8001500:	200000d8 	.word	0x200000d8

08001504 <__sflush_r>:
 8001504:	898a      	ldrh	r2, [r1, #12]
 8001506:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 800150a:	4605      	mov	r5, r0
 800150c:	0710      	lsls	r0, r2, #28
 800150e:	460c      	mov	r4, r1
 8001510:	d458      	bmi.n	80015c4 <__sflush_r+0xc0>
 8001512:	684b      	ldr	r3, [r1, #4]
 8001514:	2b00      	cmp	r3, #0
 8001516:	dc05      	bgt.n	8001524 <__sflush_r+0x20>
 8001518:	6c0b      	ldr	r3, [r1, #64]	; 0x40
 800151a:	2b00      	cmp	r3, #0
 800151c:	dc02      	bgt.n	8001524 <__sflush_r+0x20>
 800151e:	2000      	movs	r0, #0
 8001520:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 8001524:	6ae6      	ldr	r6, [r4, #44]	; 0x2c
 8001526:	2e00      	cmp	r6, #0
 8001528:	d0f9      	beq.n	800151e <__sflush_r+0x1a>
 800152a:	2300      	movs	r3, #0
 800152c:	f412 5280 	ands.w	r2, r2, #4096	; 0x1000
 8001530:	682f      	ldr	r7, [r5, #0]
 8001532:	602b      	str	r3, [r5, #0]
 8001534:	d032      	beq.n	800159c <__sflush_r+0x98>
 8001536:	6d60      	ldr	r0, [r4, #84]	; 0x54
 8001538:	89a3      	ldrh	r3, [r4, #12]
 800153a:	075a      	lsls	r2, r3, #29
 800153c:	d505      	bpl.n	800154a <__sflush_r+0x46>
 800153e:	6863      	ldr	r3, [r4, #4]
 8001540:	1ac0      	subs	r0, r0, r3
 8001542:	6b63      	ldr	r3, [r4, #52]	; 0x34
 8001544:	b10b      	cbz	r3, 800154a <__sflush_r+0x46>
 8001546:	6c23      	ldr	r3, [r4, #64]	; 0x40
 8001548:	1ac0      	subs	r0, r0, r3
 800154a:	2300      	movs	r3, #0
 800154c:	4602      	mov	r2, r0
 800154e:	6ae6      	ldr	r6, [r4, #44]	; 0x2c
 8001550:	6a21      	ldr	r1, [r4, #32]
 8001552:	4628      	mov	r0, r5
 8001554:	47b0      	blx	r6
 8001556:	1c43      	adds	r3, r0, #1
 8001558:	89a3      	ldrh	r3, [r4, #12]
 800155a:	d106      	bne.n	800156a <__sflush_r+0x66>
 800155c:	6829      	ldr	r1, [r5, #0]
 800155e:	291d      	cmp	r1, #29
 8001560:	d82c      	bhi.n	80015bc <__sflush_r+0xb8>
 8001562:	4a2a      	ldr	r2, [pc, #168]	; (800160c <__sflush_r+0x108>)
 8001564:	40ca      	lsrs	r2, r1
 8001566:	07d6      	lsls	r6, r2, #31
 8001568:	d528      	bpl.n	80015bc <__sflush_r+0xb8>
 800156a:	2200      	movs	r2, #0
 800156c:	6062      	str	r2, [r4, #4]
 800156e:	04d9      	lsls	r1, r3, #19
 8001570:	6922      	ldr	r2, [r4, #16]
 8001572:	6022      	str	r2, [r4, #0]
 8001574:	d504      	bpl.n	8001580 <__sflush_r+0x7c>
 8001576:	1c42      	adds	r2, r0, #1
 8001578:	d101      	bne.n	800157e <__sflush_r+0x7a>
 800157a:	682b      	ldr	r3, [r5, #0]
 800157c:	b903      	cbnz	r3, 8001580 <__sflush_r+0x7c>
 800157e:	6560      	str	r0, [r4, #84]	; 0x54
 8001580:	6b61      	ldr	r1, [r4, #52]	; 0x34
 8001582:	602f      	str	r7, [r5, #0]
 8001584:	2900      	cmp	r1, #0
 8001586:	d0ca      	beq.n	800151e <__sflush_r+0x1a>
 8001588:	f104 0344 	add.w	r3, r4, #68	; 0x44
 800158c:	4299      	cmp	r1, r3
 800158e:	d002      	beq.n	8001596 <__sflush_r+0x92>
 8001590:	4628      	mov	r0, r5
 8001592:	f7ff fa63 	bl	8000a5c <_free_r>
 8001596:	2000      	movs	r0, #0
 8001598:	6360      	str	r0, [r4, #52]	; 0x34
 800159a:	e7c1      	b.n	8001520 <__sflush_r+0x1c>
 800159c:	6a21      	ldr	r1, [r4, #32]
 800159e:	2301      	movs	r3, #1
 80015a0:	4628      	mov	r0, r5
 80015a2:	47b0      	blx	r6
 80015a4:	1c41      	adds	r1, r0, #1
 80015a6:	d1c7      	bne.n	8001538 <__sflush_r+0x34>
 80015a8:	682b      	ldr	r3, [r5, #0]
 80015aa:	2b00      	cmp	r3, #0
 80015ac:	d0c4      	beq.n	8001538 <__sflush_r+0x34>
 80015ae:	2b1d      	cmp	r3, #29
 80015b0:	d001      	beq.n	80015b6 <__sflush_r+0xb2>
 80015b2:	2b16      	cmp	r3, #22
 80015b4:	d101      	bne.n	80015ba <__sflush_r+0xb6>
 80015b6:	602f      	str	r7, [r5, #0]
 80015b8:	e7b1      	b.n	800151e <__sflush_r+0x1a>
 80015ba:	89a3      	ldrh	r3, [r4, #12]
 80015bc:	f043 0340 	orr.w	r3, r3, #64	; 0x40
 80015c0:	81a3      	strh	r3, [r4, #12]
 80015c2:	e7ad      	b.n	8001520 <__sflush_r+0x1c>
 80015c4:	690f      	ldr	r7, [r1, #16]
 80015c6:	2f00      	cmp	r7, #0
 80015c8:	d0a9      	beq.n	800151e <__sflush_r+0x1a>
 80015ca:	0793      	lsls	r3, r2, #30
 80015cc:	680e      	ldr	r6, [r1, #0]
 80015ce:	bf08      	it	eq
 80015d0:	694b      	ldreq	r3, [r1, #20]
 80015d2:	600f      	str	r7, [r1, #0]
 80015d4:	bf18      	it	ne
 80015d6:	2300      	movne	r3, #0
 80015d8:	eba6 0807 	sub.w	r8, r6, r7
 80015dc:	608b      	str	r3, [r1, #8]
 80015de:	f1b8 0f00 	cmp.w	r8, #0
 80015e2:	dd9c      	ble.n	800151e <__sflush_r+0x1a>
 80015e4:	6a21      	ldr	r1, [r4, #32]
 80015e6:	6aa6      	ldr	r6, [r4, #40]	; 0x28
 80015e8:	4643      	mov	r3, r8
 80015ea:	463a      	mov	r2, r7
 80015ec:	4628      	mov	r0, r5
 80015ee:	47b0      	blx	r6
 80015f0:	2800      	cmp	r0, #0
 80015f2:	dc06      	bgt.n	8001602 <__sflush_r+0xfe>
 80015f4:	89a3      	ldrh	r3, [r4, #12]
 80015f6:	f043 0340 	orr.w	r3, r3, #64	; 0x40
 80015fa:	81a3      	strh	r3, [r4, #12]
 80015fc:	f04f 30ff 	mov.w	r0, #4294967295
 8001600:	e78e      	b.n	8001520 <__sflush_r+0x1c>
 8001602:	4407      	add	r7, r0
 8001604:	eba8 0800 	sub.w	r8, r8, r0
 8001608:	e7e9      	b.n	80015de <__sflush_r+0xda>
 800160a:	bf00      	nop
 800160c:	20400001 	.word	0x20400001

08001610 <_fflush_r>:
 8001610:	b538      	push	{r3, r4, r5, lr}
 8001612:	690b      	ldr	r3, [r1, #16]
 8001614:	4605      	mov	r5, r0
 8001616:	460c      	mov	r4, r1
 8001618:	b913      	cbnz	r3, 8001620 <_fflush_r+0x10>
 800161a:	2500      	movs	r5, #0
 800161c:	4628      	mov	r0, r5
 800161e:	bd38      	pop	{r3, r4, r5, pc}
 8001620:	b118      	cbz	r0, 800162a <_fflush_r+0x1a>
 8001622:	6983      	ldr	r3, [r0, #24]
 8001624:	b90b      	cbnz	r3, 800162a <_fflush_r+0x1a>
 8001626:	f7ff f95f 	bl	80008e8 <__sinit>
 800162a:	4b14      	ldr	r3, [pc, #80]	; (800167c <_fflush_r+0x6c>)
 800162c:	429c      	cmp	r4, r3
 800162e:	d11b      	bne.n	8001668 <_fflush_r+0x58>
 8001630:	686c      	ldr	r4, [r5, #4]
 8001632:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
 8001636:	2b00      	cmp	r3, #0
 8001638:	d0ef      	beq.n	800161a <_fflush_r+0xa>
 800163a:	6e62      	ldr	r2, [r4, #100]	; 0x64
 800163c:	07d0      	lsls	r0, r2, #31
 800163e:	d404      	bmi.n	800164a <_fflush_r+0x3a>
 8001640:	0599      	lsls	r1, r3, #22
 8001642:	d402      	bmi.n	800164a <_fflush_r+0x3a>
 8001644:	6da0      	ldr	r0, [r4, #88]	; 0x58
 8001646:	f7ff f9ff 	bl	8000a48 <__retarget_lock_acquire_recursive>
 800164a:	4628      	mov	r0, r5
 800164c:	4621      	mov	r1, r4
 800164e:	f7ff ff59 	bl	8001504 <__sflush_r>
 8001652:	6e63      	ldr	r3, [r4, #100]	; 0x64
 8001654:	07da      	lsls	r2, r3, #31
 8001656:	4605      	mov	r5, r0
 8001658:	d4e0      	bmi.n	800161c <_fflush_r+0xc>
 800165a:	89a3      	ldrh	r3, [r4, #12]
 800165c:	059b      	lsls	r3, r3, #22
 800165e:	d4dd      	bmi.n	800161c <_fflush_r+0xc>
 8001660:	6da0      	ldr	r0, [r4, #88]	; 0x58
 8001662:	f7ff f9f2 	bl	8000a4a <__retarget_lock_release_recursive>
 8001666:	e7d9      	b.n	800161c <_fflush_r+0xc>
 8001668:	4b05      	ldr	r3, [pc, #20]	; (8001680 <_fflush_r+0x70>)
 800166a:	429c      	cmp	r4, r3
 800166c:	d101      	bne.n	8001672 <_fflush_r+0x62>
 800166e:	68ac      	ldr	r4, [r5, #8]
 8001670:	e7df      	b.n	8001632 <_fflush_r+0x22>
 8001672:	4b04      	ldr	r3, [pc, #16]	; (8001684 <_fflush_r+0x74>)
 8001674:	429c      	cmp	r4, r3
 8001676:	bf08      	it	eq
 8001678:	68ec      	ldreq	r4, [r5, #12]
 800167a:	e7da      	b.n	8001632 <_fflush_r+0x22>
 800167c:	080019c8 	.word	0x080019c8
 8001680:	080019e8 	.word	0x080019e8
 8001684:	080019a8 	.word	0x080019a8

08001688 <_lseek_r>:
 8001688:	b538      	push	{r3, r4, r5, lr}
 800168a:	4d07      	ldr	r5, [pc, #28]	; (80016a8 <_lseek_r+0x20>)
 800168c:	4604      	mov	r4, r0
 800168e:	4608      	mov	r0, r1
 8001690:	4611      	mov	r1, r2
 8001692:	2200      	movs	r2, #0
 8001694:	602a      	str	r2, [r5, #0]
 8001696:	461a      	mov	r2, r3
 8001698:	f7fe ffa5 	bl	80005e6 <_lseek>
 800169c:	1c43      	adds	r3, r0, #1
 800169e:	d102      	bne.n	80016a6 <_lseek_r+0x1e>
 80016a0:	682b      	ldr	r3, [r5, #0]
 80016a2:	b103      	cbz	r3, 80016a6 <_lseek_r+0x1e>
 80016a4:	6023      	str	r3, [r4, #0]
 80016a6:	bd38      	pop	{r3, r4, r5, pc}
 80016a8:	200000d8 	.word	0x200000d8

080016ac <__swhatbuf_r>:
 80016ac:	b570      	push	{r4, r5, r6, lr}
 80016ae:	460e      	mov	r6, r1
 80016b0:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 80016b4:	2900      	cmp	r1, #0
 80016b6:	b096      	sub	sp, #88	; 0x58
 80016b8:	4614      	mov	r4, r2
 80016ba:	461d      	mov	r5, r3
 80016bc:	da08      	bge.n	80016d0 <__swhatbuf_r+0x24>
 80016be:	f9b6 300c 	ldrsh.w	r3, [r6, #12]
 80016c2:	2200      	movs	r2, #0
 80016c4:	602a      	str	r2, [r5, #0]
 80016c6:	061a      	lsls	r2, r3, #24
 80016c8:	d410      	bmi.n	80016ec <__swhatbuf_r+0x40>
 80016ca:	f44f 6380 	mov.w	r3, #1024	; 0x400
 80016ce:	e00e      	b.n	80016ee <__swhatbuf_r+0x42>
 80016d0:	466a      	mov	r2, sp
 80016d2:	f000 f8b3 	bl	800183c <_fstat_r>
 80016d6:	2800      	cmp	r0, #0
 80016d8:	dbf1      	blt.n	80016be <__swhatbuf_r+0x12>
 80016da:	9a01      	ldr	r2, [sp, #4]
 80016dc:	f402 4270 	and.w	r2, r2, #61440	; 0xf000
 80016e0:	f5a2 5300 	sub.w	r3, r2, #8192	; 0x2000
 80016e4:	425a      	negs	r2, r3
 80016e6:	415a      	adcs	r2, r3
 80016e8:	602a      	str	r2, [r5, #0]
 80016ea:	e7ee      	b.n	80016ca <__swhatbuf_r+0x1e>
 80016ec:	2340      	movs	r3, #64	; 0x40
 80016ee:	2000      	movs	r0, #0
 80016f0:	6023      	str	r3, [r4, #0]
 80016f2:	b016      	add	sp, #88	; 0x58
 80016f4:	bd70      	pop	{r4, r5, r6, pc}
	...

080016f8 <__smakebuf_r>:
 80016f8:	898b      	ldrh	r3, [r1, #12]
 80016fa:	b573      	push	{r0, r1, r4, r5, r6, lr}
 80016fc:	079d      	lsls	r5, r3, #30
 80016fe:	4606      	mov	r6, r0
 8001700:	460c      	mov	r4, r1
 8001702:	d507      	bpl.n	8001714 <__smakebuf_r+0x1c>
 8001704:	f104 0347 	add.w	r3, r4, #71	; 0x47
 8001708:	6023      	str	r3, [r4, #0]
 800170a:	6123      	str	r3, [r4, #16]
 800170c:	2301      	movs	r3, #1
 800170e:	6163      	str	r3, [r4, #20]
 8001710:	b002      	add	sp, #8
 8001712:	bd70      	pop	{r4, r5, r6, pc}
 8001714:	ab01      	add	r3, sp, #4
 8001716:	466a      	mov	r2, sp
 8001718:	f7ff ffc8 	bl	80016ac <__swhatbuf_r>
 800171c:	9900      	ldr	r1, [sp, #0]
 800171e:	4605      	mov	r5, r0
 8001720:	4630      	mov	r0, r6
 8001722:	f7ff fa07 	bl	8000b34 <_malloc_r>
 8001726:	b948      	cbnz	r0, 800173c <__smakebuf_r+0x44>
 8001728:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
 800172c:	059a      	lsls	r2, r3, #22
 800172e:	d4ef      	bmi.n	8001710 <__smakebuf_r+0x18>
 8001730:	f023 0303 	bic.w	r3, r3, #3
 8001734:	f043 0302 	orr.w	r3, r3, #2
 8001738:	81a3      	strh	r3, [r4, #12]
 800173a:	e7e3      	b.n	8001704 <__smakebuf_r+0xc>
 800173c:	4b0d      	ldr	r3, [pc, #52]	; (8001774 <__smakebuf_r+0x7c>)
 800173e:	62b3      	str	r3, [r6, #40]	; 0x28
 8001740:	89a3      	ldrh	r3, [r4, #12]
 8001742:	6020      	str	r0, [r4, #0]
 8001744:	f043 0380 	orr.w	r3, r3, #128	; 0x80
 8001748:	81a3      	strh	r3, [r4, #12]
 800174a:	9b00      	ldr	r3, [sp, #0]
 800174c:	6163      	str	r3, [r4, #20]
 800174e:	9b01      	ldr	r3, [sp, #4]
 8001750:	6120      	str	r0, [r4, #16]
 8001752:	b15b      	cbz	r3, 800176c <__smakebuf_r+0x74>
 8001754:	f9b4 100e 	ldrsh.w	r1, [r4, #14]
 8001758:	4630      	mov	r0, r6
 800175a:	f000 f881 	bl	8001860 <_isatty_r>
 800175e:	b128      	cbz	r0, 800176c <__smakebuf_r+0x74>
 8001760:	89a3      	ldrh	r3, [r4, #12]
 8001762:	f023 0303 	bic.w	r3, r3, #3
 8001766:	f043 0301 	orr.w	r3, r3, #1
 800176a:	81a3      	strh	r3, [r4, #12]
 800176c:	89a0      	ldrh	r0, [r4, #12]
 800176e:	4305      	orrs	r5, r0
 8001770:	81a5      	strh	r5, [r4, #12]
 8001772:	e7cd      	b.n	8001710 <__smakebuf_r+0x18>
 8001774:	08000881 	.word	0x08000881

08001778 <__malloc_lock>:
 8001778:	4801      	ldr	r0, [pc, #4]	; (8001780 <__malloc_lock+0x8>)
 800177a:	f7ff b965 	b.w	8000a48 <__retarget_lock_acquire_recursive>
 800177e:	bf00      	nop
 8001780:	200000cc 	.word	0x200000cc

08001784 <__malloc_unlock>:
 8001784:	4801      	ldr	r0, [pc, #4]	; (800178c <__malloc_unlock+0x8>)
 8001786:	f7ff b960 	b.w	8000a4a <__retarget_lock_release_recursive>
 800178a:	bf00      	nop
 800178c:	200000cc 	.word	0x200000cc

08001790 <_read_r>:
 8001790:	b538      	push	{r3, r4, r5, lr}
 8001792:	4d07      	ldr	r5, [pc, #28]	; (80017b0 <_read_r+0x20>)
 8001794:	4604      	mov	r4, r0
 8001796:	4608      	mov	r0, r1
 8001798:	4611      	mov	r1, r2
 800179a:	2200      	movs	r2, #0
 800179c:	602a      	str	r2, [r5, #0]
 800179e:	461a      	mov	r2, r3
 80017a0:	f7fe fec1 	bl	8000526 <_read>
 80017a4:	1c43      	adds	r3, r0, #1
 80017a6:	d102      	bne.n	80017ae <_read_r+0x1e>
 80017a8:	682b      	ldr	r3, [r5, #0]
 80017aa:	b103      	cbz	r3, 80017ae <_read_r+0x1e>
 80017ac:	6023      	str	r3, [r4, #0]
 80017ae:	bd38      	pop	{r3, r4, r5, pc}
 80017b0:	200000d8 	.word	0x200000d8

080017b4 <_raise_r>:
 80017b4:	291f      	cmp	r1, #31
 80017b6:	b538      	push	{r3, r4, r5, lr}
 80017b8:	4604      	mov	r4, r0
 80017ba:	460d      	mov	r5, r1
 80017bc:	d904      	bls.n	80017c8 <_raise_r+0x14>
 80017be:	2316      	movs	r3, #22
 80017c0:	6003      	str	r3, [r0, #0]
 80017c2:	f04f 30ff 	mov.w	r0, #4294967295
 80017c6:	bd38      	pop	{r3, r4, r5, pc}
 80017c8:	6c42      	ldr	r2, [r0, #68]	; 0x44
 80017ca:	b112      	cbz	r2, 80017d2 <_raise_r+0x1e>
 80017cc:	f852 3021 	ldr.w	r3, [r2, r1, lsl #2]
 80017d0:	b94b      	cbnz	r3, 80017e6 <_raise_r+0x32>
 80017d2:	4620      	mov	r0, r4
 80017d4:	f000 f830 	bl	8001838 <_getpid_r>
 80017d8:	462a      	mov	r2, r5
 80017da:	4601      	mov	r1, r0
 80017dc:	4620      	mov	r0, r4
 80017de:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
 80017e2:	f000 b817 	b.w	8001814 <_kill_r>
 80017e6:	2b01      	cmp	r3, #1
 80017e8:	d00a      	beq.n	8001800 <_raise_r+0x4c>
 80017ea:	1c59      	adds	r1, r3, #1
 80017ec:	d103      	bne.n	80017f6 <_raise_r+0x42>
 80017ee:	2316      	movs	r3, #22
 80017f0:	6003      	str	r3, [r0, #0]
 80017f2:	2001      	movs	r0, #1
 80017f4:	e7e7      	b.n	80017c6 <_raise_r+0x12>
 80017f6:	2400      	movs	r4, #0
 80017f8:	f842 4025 	str.w	r4, [r2, r5, lsl #2]
 80017fc:	4628      	mov	r0, r5
 80017fe:	4798      	blx	r3
 8001800:	2000      	movs	r0, #0
 8001802:	e7e0      	b.n	80017c6 <_raise_r+0x12>

08001804 <raise>:
 8001804:	4b02      	ldr	r3, [pc, #8]	; (8001810 <raise+0xc>)
 8001806:	4601      	mov	r1, r0
 8001808:	6818      	ldr	r0, [r3, #0]
 800180a:	f7ff bfd3 	b.w	80017b4 <_raise_r>
 800180e:	bf00      	nop
 8001810:	20000048 	.word	0x20000048

08001814 <_kill_r>:
 8001814:	b538      	push	{r3, r4, r5, lr}
 8001816:	4d07      	ldr	r5, [pc, #28]	; (8001834 <_kill_r+0x20>)
 8001818:	2300      	movs	r3, #0
 800181a:	4604      	mov	r4, r0
 800181c:	4608      	mov	r0, r1
 800181e:	4611      	mov	r1, r2
 8001820:	602b      	str	r3, [r5, #0]
 8001822:	f7fe fe66 	bl	80004f2 <_kill>
 8001826:	1c43      	adds	r3, r0, #1
 8001828:	d102      	bne.n	8001830 <_kill_r+0x1c>
 800182a:	682b      	ldr	r3, [r5, #0]
 800182c:	b103      	cbz	r3, 8001830 <_kill_r+0x1c>
 800182e:	6023      	str	r3, [r4, #0]
 8001830:	bd38      	pop	{r3, r4, r5, pc}
 8001832:	bf00      	nop
 8001834:	200000d8 	.word	0x200000d8

08001838 <_getpid_r>:
 8001838:	f7fe be53 	b.w	80004e2 <_getpid>

0800183c <_fstat_r>:
 800183c:	b538      	push	{r3, r4, r5, lr}
 800183e:	4d07      	ldr	r5, [pc, #28]	; (800185c <_fstat_r+0x20>)
 8001840:	2300      	movs	r3, #0
 8001842:	4604      	mov	r4, r0
 8001844:	4608      	mov	r0, r1
 8001846:	4611      	mov	r1, r2
 8001848:	602b      	str	r3, [r5, #0]
 800184a:	f7fe feb1 	bl	80005b0 <_fstat>
 800184e:	1c43      	adds	r3, r0, #1
 8001850:	d102      	bne.n	8001858 <_fstat_r+0x1c>
 8001852:	682b      	ldr	r3, [r5, #0]
 8001854:	b103      	cbz	r3, 8001858 <_fstat_r+0x1c>
 8001856:	6023      	str	r3, [r4, #0]
 8001858:	bd38      	pop	{r3, r4, r5, pc}
 800185a:	bf00      	nop
 800185c:	200000d8 	.word	0x200000d8

08001860 <_isatty_r>:
 8001860:	b538      	push	{r3, r4, r5, lr}
 8001862:	4d06      	ldr	r5, [pc, #24]	; (800187c <_isatty_r+0x1c>)
 8001864:	2300      	movs	r3, #0
 8001866:	4604      	mov	r4, r0
 8001868:	4608      	mov	r0, r1
 800186a:	602b      	str	r3, [r5, #0]
 800186c:	f7fe feb0 	bl	80005d0 <_isatty>
 8001870:	1c43      	adds	r3, r0, #1
 8001872:	d102      	bne.n	800187a <_isatty_r+0x1a>
 8001874:	682b      	ldr	r3, [r5, #0]
 8001876:	b103      	cbz	r3, 800187a <_isatty_r+0x1a>
 8001878:	6023      	str	r3, [r4, #0]
 800187a:	bd38      	pop	{r3, r4, r5, pc}
 800187c:	200000d8 	.word	0x200000d8

08001880 <_init>:
 8001880:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8001882:	bf00      	nop
 8001884:	bcf8      	pop	{r3, r4, r5, r6, r7}
 8001886:	bc08      	pop	{r3}
 8001888:	469e      	mov	lr, r3
 800188a:	4770      	bx	lr

0800188c <_fini>:
 800188c:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 800188e:	bf00      	nop
 8001890:	bcf8      	pop	{r3, r4, r5, r6, r7}
 8001892:	bc08      	pop	{r3}
 8001894:	469e      	mov	lr, r3
 8001896:	4770      	bx	lr
